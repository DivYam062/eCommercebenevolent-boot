{"ast":null,"code":"'use client';\n\nimport { StepContextProvider, StepperStylesProvider } from \"./chunk-5JULEEQD.mjs\";\n\n// src/stepper.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Stepper = forwardRef(function Stepper2(props, ref) {\n  const styles = useMultiStyleConfig(\"Stepper\", props);\n  const {\n    children,\n    index,\n    orientation = \"horizontal\",\n    showLastSeparator = false,\n    ...restProps\n  } = omitThemingProps(props);\n  const stepElements = Children.toArray(children);\n  const stepCount = stepElements.length;\n  function getStatus(step) {\n    if (step < index) return \"complete\";\n    if (step > index) return \"incomplete\";\n    return \"active\";\n  }\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    \"aria-label\": \"Progress\",\n    \"data-orientation\": orientation,\n    ...restProps,\n    __css: styles.stepper,\n    className: cx(\"chakra-stepper\", props.className),\n    children: /* @__PURE__ */jsx(StepperStylesProvider, {\n      value: styles,\n      children: stepElements.map((child, index2) => /* @__PURE__ */jsx(StepContextProvider, {\n        value: {\n          index: index2,\n          status: getStatus(index2),\n          orientation,\n          showLastSeparator,\n          count: stepCount,\n          isFirst: index2 === 0,\n          isLast: index2 === stepCount - 1\n        },\n        children: child\n      }, index2))\n    })\n  });\n});\nexport { Stepper };","map":{"version":3,"names":["cx","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","Children","jsx","Stepper","Stepper2","props","ref","styles","children","index","orientation","showLastSeparator","restProps","stepElements","toArray","stepCount","length","getStatus","step","div","__css","stepper","className","StepperStylesProvider","value","map","child","index2","StepContextProvider","status","count","isFirst","isLast"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\stepper\\src\\stepper.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport {\n  Orientation,\n  StepContextProvider,\n  StepStatusType,\n  StepperStylesProvider,\n} from \"./step-context\"\n\nexport interface StepperProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Stepper\"> {\n  /**\n   * The active step index\n   */\n  index: number\n  /**\n   * The orientation of the stepper\n   * @default horizontal\n   */\n  orientation?: Orientation\n  /**\n   * Whether to show or not the last separator while in vertical orientation\n   */\n  showLastSeparator?: boolean\n  /**\n   */\n  children: React.ReactNode\n}\n\nexport const Stepper = forwardRef<StepperProps, \"div\">(function Stepper(\n  props: StepperProps,\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Stepper\", props)\n\n  const {\n    children,\n    index,\n    orientation = \"horizontal\",\n    showLastSeparator = false,\n    ...restProps\n  } = omitThemingProps(props)\n\n  const stepElements = Children.toArray(children)\n\n  const stepCount = stepElements.length\n\n  function getStatus(step: number): StepStatusType {\n    if (step < index) return \"complete\"\n    if (step > index) return \"incomplete\"\n    return \"active\"\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      aria-label=\"Progress\"\n      data-orientation={orientation}\n      {...restProps}\n      __css={styles.stepper}\n      className={cx(\"chakra-stepper\", props.className)}\n    >\n      <StepperStylesProvider value={styles}>\n        {stepElements.map((child, index) => (\n          <StepContextProvider\n            key={index}\n            value={{\n              index,\n              status: getStatus(index),\n              orientation,\n              showLastSeparator,\n              count: stepCount,\n              isFirst: index === 0,\n              isLast: index === stepCount - 1,\n            }}\n          >\n            {child}\n          </StepContextProvider>\n        ))}\n      </StepperStylesProvider>\n    </chakra.div>\n  )\n})\n"],"mappings":";;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAGEC,MAAA,EACAC,UAAA,EACAC,gBAAA,EACAC,mBAAA,QACK;AACP,SAASC,QAAA,QAAgB;AAgEf,SAAAC,GAAA;AAnCH,IAAMC,OAAA,GAAUL,UAAA,CAAgC,SAASM,SAC9DC,KAAA,EACAC,GAAA,EACA;EACA,MAAMC,MAAA,GAASP,mBAAA,CAAoB,WAAWK,KAAK;EAEnD,MAAM;IACJG,QAAA;IACAC,KAAA;IACAC,WAAA,GAAc;IACdC,iBAAA,GAAoB;IACpB,GAAGC;EACL,IAAIb,gBAAA,CAAiBM,KAAK;EAE1B,MAAMQ,YAAA,GAAeZ,QAAA,CAASa,OAAA,CAAQN,QAAQ;EAE9C,MAAMO,SAAA,GAAYF,YAAA,CAAaG,MAAA;EAE/B,SAASC,UAAUC,IAAA,EAA8B;IAC/C,IAAIA,IAAA,GAAOT,KAAA,EAAO,OAAO;IACzB,IAAIS,IAAA,GAAOT,KAAA,EAAO,OAAO;IACzB,OAAO;EACT;EAEA,OACE,eAAAP,GAAA,CAACL,MAAA,CAAOsB,GAAA,EAAP;IACCb,GAAA;IACA,cAAW;IACX,oBAAkBI,WAAA;IACjB,GAAGE,SAAA;IACJQ,KAAA,EAAOb,MAAA,CAAOc,OAAA;IACdC,SAAA,EAAW1B,EAAA,CAAG,kBAAkBS,KAAA,CAAMiB,SAAS;IAE/Cd,QAAA,iBAAAN,GAAA,CAACqB,qBAAA;MAAsBC,KAAA,EAAOjB,MAAA;MAC3BC,QAAA,EAAAK,YAAA,CAAaY,GAAA,CAAI,CAACC,KAAA,EAAOC,MAAA,KACxB,eAAAzB,GAAA,CAAC0B,mBAAA;QAECJ,KAAA,EAAO;UACLf,KAAA,EAAAkB,MAAA;UACAE,MAAA,EAAQZ,SAAA,CAAUU,MAAK;UACvBjB,WAAA;UACAC,iBAAA;UACAmB,KAAA,EAAOf,SAAA;UACPgB,OAAA,EAASJ,MAAA,KAAU;UACnBK,MAAA,EAAQL,MAAA,KAAUZ,SAAA,GAAY;QAChC;QAECP,QAAA,EAAAkB;MAAA,GAXIC,MAYP,CACD;IAAA,CACH;EAAA,CACF;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}