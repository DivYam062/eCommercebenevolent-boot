{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalCloseButton = forwardRef((props, ref) => {\n  const {\n    onClick,\n    className,\n    ...rest\n  } = props;\n  const {\n    onClose\n  } = useModalContext();\n  const _className = cx(\"chakra-modal__close-btn\", className);\n  const styles = useModalStyles();\n  return /* @__PURE__ */jsx(CloseButton, {\n    ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, event => {\n      event.stopPropagation();\n      onClose();\n    }),\n    ...rest\n  });\n});\nModalCloseButton.displayName = \"ModalCloseButton\";\nexport { ModalCloseButton };","map":{"version":3,"names":["CloseButton","cx","callAllHandlers","forwardRef","jsx","ModalCloseButton","props","ref","onClick","className","rest","onClose","useModalContext","_className","styles","useModalStyles","__css","closeButton","event","stopPropagation","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\modal\\src\\modal-close-button.tsx"],"sourcesContent":["import { CloseButtonProps, CloseButton } from \"@chakra-ui/close-button\"\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { forwardRef } from \"@chakra-ui/system\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport type ModalCloseButtonProps = CloseButtonProps\n\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\nexport const ModalCloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose } = useModalContext()\n\n    const _className = cx(\"chakra-modal__close-btn\", className)\n\n    const styles = useModalStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event: React.MouseEvent) => {\n          event.stopPropagation()\n          onClose()\n        })}\n        {...rest}\n      />\n    )\n  },\n)\n\nModalCloseButton.displayName = \"ModalCloseButton\"\n"],"mappings":";;;;;AAAA,SAA2BA,WAAA,QAAmB;AAC9C,SAASC,EAAA,EAAIC,eAAA,QAAuB;AACpC,SAASC,UAAA,QAAkB;AAsBrB,SAAAC,GAAA;AAVC,IAAMC,gBAAA,GAAmBF,UAAA,CAC9B,CAACG,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAM;IAAEC,OAAA;IAASC,SAAA;IAAW,GAAGC;EAAK,IAAIJ,KAAA;EACxC,MAAM;IAAEK;EAAQ,IAAIC,eAAA,CAAgB;EAEpC,MAAMC,UAAA,GAAaZ,EAAA,CAAG,2BAA2BQ,SAAS;EAE1D,MAAMK,MAAA,GAASC,cAAA,CAAe;EAE9B,OACE,eAAAX,GAAA,CAACJ,WAAA;IACCO,GAAA;IACAS,KAAA,EAAOF,MAAA,CAAOG,WAAA;IACdR,SAAA,EAAWI,UAAA;IACXL,OAAA,EAASN,eAAA,CAAgBM,OAAA,EAAUU,KAAA,IAA4B;MAC7DA,KAAA,CAAMC,eAAA,CAAgB;MACtBR,OAAA,CAAQ;IACV,CAAC;IACA,GAAGD;EAAA,CACN;AAEJ,CACF;AAEAL,gBAAA,CAAiBe,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}