{"ast":null,"code":"'use client';\n\n// src/toast.utils.ts\nvar findById = (arr, id) => arr.find(toast => toast.id === id);\nfunction findToast(toasts, id) {\n  const position = getToastPosition(toasts, id);\n  const index = position ? toasts[position].findIndex(toast => toast.id === id) : -1;\n  return {\n    position,\n    index\n  };\n}\nfunction getToastPosition(toasts, id) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position;\n    }\n  }\n}\nvar isVisible = (toasts, id) => !!getToastPosition(toasts, id);\nfunction getToastStyle(position) {\n  const isRighty = position.includes(\"right\");\n  const isLefty = position.includes(\"left\");\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems\n  };\n}\nfunction getToastListStyle(position) {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\";\n  const margin = isTopOrBottom ? \"0 auto\" : void 0;\n  const top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : void 0;\n  const bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : void 0;\n  const right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : void 0;\n  const left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : void 0;\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left\n  };\n}\nexport { findById, findToast, getToastPosition, isVisible, getToastStyle, getToastListStyle };","map":{"version":3,"names":["findById","arr","id","find","toast","findToast","toasts","position","getToastPosition","index","findIndex","values","Object","entries","isVisible","getToastStyle","isRighty","includes","isLefty","alignItems","display","flexDirection","getToastListStyle","isTopOrBottom","margin","top","bottom","right","left","zIndex","pointerEvents"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\toast\\src\\toast.utils.ts"],"sourcesContent":["import type { ToastPosition } from \"./toast.placement\"\nimport type { ToastId, ToastOptions, ToastState } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport function getToastPosition(toasts: ToastState, id: ToastId) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position as ToastPosition\n    }\n  }\n}\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Gets the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n\n/**\n * Compute the style of a toast based on its position\n */\nexport function getToastListStyle(\n  position: ToastPosition,\n): React.CSSProperties {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\"\n  const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n  const top = position.includes(\"top\")\n    ? \"env(safe-area-inset-top, 0px)\"\n    : undefined\n  const bottom = position.includes(\"bottom\")\n    ? \"env(safe-area-inset-bottom, 0px)\"\n    : undefined\n  const right = !position.includes(\"left\")\n    ? \"env(safe-area-inset-right, 0px)\"\n    : undefined\n  const left = !position.includes(\"right\")\n    ? \"env(safe-area-inset-left, 0px)\"\n    : undefined\n\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left,\n  }\n}\n"],"mappings":";;;AAOO,IAAMA,QAAA,GAAWA,CAACC,GAAA,EAAqBC,EAAA,KAC5CD,GAAA,CAAIE,IAAA,CAAMC,KAAA,IAAUA,KAAA,CAAMF,EAAA,KAAOA,EAAE;AAM9B,SAASG,UAAUC,MAAA,EAAoBJ,EAAA,EAAa;EACzD,MAAMK,QAAA,GAAWC,gBAAA,CAAiBF,MAAA,EAAQJ,EAAE;EAE5C,MAAMO,KAAA,GAAQF,QAAA,GACVD,MAAA,CAAOC,QAAQ,EAAEG,SAAA,CAAWN,KAAA,IAAUA,KAAA,CAAMF,EAAA,KAAOA,EAAE,IACrD;EAEJ,OAAO;IACLK,QAAA;IACAE;EACF;AACF;AAMO,SAASD,iBAAiBF,MAAA,EAAoBJ,EAAA,EAAa;EAChE,WAAW,CAACK,QAAA,EAAUI,MAAM,KAAKC,MAAA,CAAOC,OAAA,CAAQP,MAAM,GAAG;IACvD,IAAIN,QAAA,CAASW,MAAA,EAAQT,EAAE,GAAG;MACxB,OAAOK,QAAA;IACT;EACF;AACF;AAMO,IAAMO,SAAA,GAAYA,CAACR,MAAA,EAAoBJ,EAAA,KAC5C,CAAC,CAACM,gBAAA,CAAiBF,MAAA,EAAQJ,EAAE;AAMxB,SAASa,cAAcR,QAAA,EAA8C;EAC1E,MAAMS,QAAA,GAAWT,QAAA,CAASU,QAAA,CAAS,OAAO;EAC1C,MAAMC,OAAA,GAAUX,QAAA,CAASU,QAAA,CAAS,MAAM;EAExC,IAAIE,UAAA,GAAa;EACjB,IAAIH,QAAA,EAAUG,UAAA,GAAa;EAC3B,IAAID,OAAA,EAASC,UAAA,GAAa;EAE1B,OAAO;IACLC,OAAA,EAAS;IACTC,aAAA,EAAe;IACfF;EACF;AACF;AAKO,SAASG,kBACdf,QAAA,EACqB;EACrB,MAAMgB,aAAA,GAAgBhB,QAAA,KAAa,SAASA,QAAA,KAAa;EACzD,MAAMiB,MAAA,GAASD,aAAA,GAAgB,WAAW;EAE1C,MAAME,GAAA,GAAMlB,QAAA,CAASU,QAAA,CAAS,KAAK,IAC/B,kCACA;EACJ,MAAMS,MAAA,GAASnB,QAAA,CAASU,QAAA,CAAS,QAAQ,IACrC,qCACA;EACJ,MAAMU,KAAA,GAAQ,CAACpB,QAAA,CAASU,QAAA,CAAS,MAAM,IACnC,oCACA;EACJ,MAAMW,IAAA,GAAO,CAACrB,QAAA,CAASU,QAAA,CAAS,OAAO,IACnC,mCACA;EAEJ,OAAO;IACLV,QAAA,EAAU;IACVsB,MAAA,EAAQ;IACRC,aAAA,EAAe;IACfV,OAAA,EAAS;IACTC,aAAA,EAAe;IACfG,MAAA;IACAC,GAAA;IACAC,MAAA;IACAC,KAAA;IACAC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}