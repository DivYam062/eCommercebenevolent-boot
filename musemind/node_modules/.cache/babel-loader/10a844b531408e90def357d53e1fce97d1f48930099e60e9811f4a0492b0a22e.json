{"ast":null,"code":"'use client';\n\n// src/popper.placement.ts\nvar logicals = {\n  \"start-start\": {\n    ltr: \"left-start\",\n    rtl: \"right-start\"\n  },\n  \"start-end\": {\n    ltr: \"left-end\",\n    rtl: \"right-end\"\n  },\n  \"end-start\": {\n    ltr: \"right-start\",\n    rtl: \"left-start\"\n  },\n  \"end-end\": {\n    ltr: \"right-end\",\n    rtl: \"left-end\"\n  },\n  start: {\n    ltr: \"left\",\n    rtl: \"right\"\n  },\n  end: {\n    ltr: \"right\",\n    rtl: \"left\"\n  }\n};\nvar opposites = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\"\n};\nfunction getPopperPlacement(placement, dir = \"ltr\") {\n  var _a, _b;\n  const value = ((_a = logicals[placement]) == null ? void 0 : _a[dir]) || placement;\n  if (dir === \"ltr\") return value;\n  return (_b = opposites[placement]) != null ? _b : value;\n}\nexport { getPopperPlacement };","map":{"version":3,"names":["logicals","ltr","rtl","start","end","opposites","getPopperPlacement","placement","dir","_a","_b","value"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\popper\\src\\popper.placement.ts"],"sourcesContent":["import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = ((logicals as any)[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return (opposites as any)[placement] ?? value\n}\n"],"mappings":";;;AAcA,IAAMA,QAAA,GAAgE;EACpE,eAAe;IAAEC,GAAA,EAAK;IAAcC,GAAA,EAAK;EAAc;EACvD,aAAa;IAAED,GAAA,EAAK;IAAYC,GAAA,EAAK;EAAY;EACjD,aAAa;IAAED,GAAA,EAAK;IAAeC,GAAA,EAAK;EAAa;EACrD,WAAW;IAAED,GAAA,EAAK;IAAaC,GAAA,EAAK;EAAW;EAC/CC,KAAA,EAAO;IAAEF,GAAA,EAAK;IAAQC,GAAA,EAAK;EAAQ;EACnCE,GAAA,EAAK;IAAEH,GAAA,EAAK;IAASC,GAAA,EAAK;EAAO;AACnC;AAEA,IAAMG,SAAA,GAAmD;EACvD,cAAc;EACd,YAAY;EACZ,aAAa;EACb,WAAW;EACX,gBAAgB;EAChB,cAAc;AAChB;AAEO,SAASC,mBACdC,SAAA,EACAC,GAAA,GAAqB,OACV;EAnCb,IAAAC,EAAA,EAAAC,EAAA;EAoCE,MAAMC,KAAA,KAAUF,EAAA,GAAAT,QAAA,CAAiBO,SAAS,MAA1B,gBAAAE,EAAA,CAA8BD,GAAA,MAAQD,SAAA;EACtD,IAAIC,GAAA,KAAQ,OAAO,OAAOG,KAAA;EAC1B,QAAQD,EAAA,GAAAL,SAAA,CAAkBE,SAAS,MAA3B,OAAAG,EAAA,GAAgCC,KAAA;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}