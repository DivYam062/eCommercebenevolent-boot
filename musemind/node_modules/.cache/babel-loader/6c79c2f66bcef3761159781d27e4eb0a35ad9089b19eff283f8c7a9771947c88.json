{"ast":null,"code":"'use client';\n\nimport { useMenuStyles } from \"./chunk-UZJ3TPNQ.mjs\";\nimport { useMenuButton } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-button.tsx\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledMenuButton = forwardRef((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    ...props,\n    __css: {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0,\n      ...styles.button\n    }\n  });\n});\nvar MenuButton = forwardRef((props, ref) => {\n  const {\n    children,\n    as: As,\n    ...rest\n  } = props;\n  const buttonProps = useMenuButton(rest, ref);\n  const Element = As || StyledMenuButton;\n  return /* @__PURE__ */jsx(Element, {\n    ...buttonProps,\n    className: cx(\"chakra-menu__menu-button\", props.className),\n    children: /* @__PURE__ */jsx(chakra.span, {\n      __css: {\n        pointerEvents: \"none\",\n        flex: \"1 1 auto\",\n        minW: 0\n      },\n      children: props.children\n    })\n  });\n});\nMenuButton.displayName = \"MenuButton\";\nexport { MenuButton };","map":{"version":3,"names":["forwardRef","chakra","cx","jsx","StyledMenuButton","props","ref","styles","useMenuStyles","button","__css","display","appearance","alignItems","outline","MenuButton","children","as","As","rest","buttonProps","useMenuButton","Element","className","span","pointerEvents","flex","minW","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\menu\\src\\menu-button.tsx"],"sourcesContent":["import { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuButton } from \"./use-menu\"\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useMenuStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n *\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nMenuButton.displayName = \"MenuButton\"\n"],"mappings":";;;;;;AAAA,SAASA,UAAA,EAA6BC,MAAA,QAAc;AACpD,SAASC,EAAA,QAAU;AAUf,SAAAC,GAAA;AAHJ,IAAMC,gBAAA,GAAmBJ,UAAA,CAAsC,CAACK,KAAA,EAAOC,GAAA,KAAQ;EAC7E,MAAMC,MAAA,GAASC,aAAA,CAAc;EAC7B,OACE,eAAAL,GAAA,CAACF,MAAA,CAAOQ,MAAA,EAAP;IACCH,GAAA;IACC,GAAGD,KAAA;IACJK,KAAA,EAAO;MACLC,OAAA,EAAS;MACTC,UAAA,EAAY;MACZC,UAAA,EAAY;MACZC,OAAA,EAAS;MACT,GAAGP,MAAA,CAAOE;IACZ;EAAA,CACF;AAEJ,CAAC;AAOM,IAAMM,UAAA,GAAaf,UAAA,CACxB,CAACK,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAM;IAAEU,QAAA;IAAUC,EAAA,EAAIC,EAAA;IAAI,GAAGC;EAAK,IAAId,KAAA;EAEtC,MAAMe,WAAA,GAAcC,aAAA,CAAcF,IAAA,EAAMb,GAAG;EAE3C,MAAMgB,OAAA,GAAUJ,EAAA,IAAMd,gBAAA;EAEtB,OACE,eAAAD,GAAA,CAACmB,OAAA;IACE,GAAGF,WAAA;IACJG,SAAA,EAAWrB,EAAA,CAAG,4BAA4BG,KAAA,CAAMkB,SAAS;IAEzDP,QAAA,iBAAAb,GAAA,CAACF,MAAA,CAAOuB,IAAA,EAAP;MACCd,KAAA,EAAO;QAAEe,aAAA,EAAe;QAAQC,IAAA,EAAM;QAAYC,IAAA,EAAM;MAAE;MAEzDX,QAAA,EAAAX,KAAA,CAAMW;IAAA,CACT;EAAA,CACF;AAEJ,CACF;AAEAD,UAAA,CAAWa,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}