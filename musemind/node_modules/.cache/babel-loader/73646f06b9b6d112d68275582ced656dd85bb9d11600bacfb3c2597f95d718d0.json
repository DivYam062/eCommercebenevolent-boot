{"ast":null,"code":"'use client';\n\n// src/use-clipboard.ts\nimport { useState, useCallback, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\nfunction useClipboard(value, optionsOrTimeout = {}) {\n  const [hasCopied, setHasCopied] = useState(false);\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => setValueState(value), [value]);\n  const {\n    timeout = 1500,\n    ...copyOptions\n  } = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout;\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  useEffect(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied\n  };\n}\nexport { useClipboard };","map":{"version":3,"names":["useState","useCallback","useEffect","copy","useClipboard","value","optionsOrTimeout","hasCopied","setHasCopied","valueState","setValueState","timeout","copyOptions","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","setValue"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-clipboard.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\nexport interface UseClipboardOptions {\n  /**\n   * timeout delay (in ms) to switch back to initial state once copied.\n   */\n  timeout?: number\n  /**\n   * Set the desired MIME type\n   */\n  format?: string\n}\n\n/**\n * React hook to copy content to clipboard\n *\n * @param value the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-clipboard\n */\nexport function useClipboard(\n  value: string,\n  optionsOrTimeout: number | UseClipboardOptions = {},\n) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const [valueState, setValueState] = useState(value)\n  useEffect(() => setValueState(value), [value])\n\n  const { timeout = 1500, ...copyOptions } =\n    typeof optionsOrTimeout === \"number\"\n      ? { timeout: optionsOrTimeout }\n      : optionsOrTimeout\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions)\n    setHasCopied(didCopy)\n  }, [valueState, copyOptions])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied,\n  }\n}\n"],"mappings":";;;AAAA,SAASA,QAAA,EAAUC,WAAA,EAAaC,SAAA,QAAiB;AACjD,OAAOC,IAAA,MAAU;AAwBV,SAASC,aACdC,KAAA,EACAC,gBAAA,GAAiD,CAAC,GAClD;EACA,MAAM,CAACC,SAAA,EAAWC,YAAY,IAAIR,QAAA,CAAS,KAAK;EAEhD,MAAM,CAACS,UAAA,EAAYC,aAAa,IAAIV,QAAA,CAASK,KAAK;EAClDH,SAAA,CAAU,MAAMQ,aAAA,CAAcL,KAAK,GAAG,CAACA,KAAK,CAAC;EAE7C,MAAM;IAAEM,OAAA,GAAU;IAAM,GAAGC;EAAY,IACrC,OAAON,gBAAA,KAAqB,WACxB;IAAEK,OAAA,EAASL;EAAiB,IAC5BA,gBAAA;EAEN,MAAMO,MAAA,GAASZ,WAAA,CAAY,MAAM;IAC/B,MAAMa,OAAA,GAAUX,IAAA,CAAKM,UAAA,EAAYG,WAAW;IAC5CJ,YAAA,CAAaM,OAAO;EACtB,GAAG,CAACL,UAAA,EAAYG,WAAW,CAAC;EAE5BV,SAAA,CAAU,MAAM;IACd,IAAIa,SAAA,GAA2B;IAE/B,IAAIR,SAAA,EAAW;MACbQ,SAAA,GAAYC,MAAA,CAAOC,UAAA,CAAW,MAAM;QAClCT,YAAA,CAAa,KAAK;MACpB,GAAGG,OAAO;IACZ;IAEA,OAAO,MAAM;MACX,IAAII,SAAA,EAAW;QACbC,MAAA,CAAOE,YAAA,CAAaH,SAAS;MAC/B;IACF;EACF,GAAG,CAACJ,OAAA,EAASJ,SAAS,CAAC;EAEvB,OAAO;IACLF,KAAA,EAAOI,UAAA;IACPU,QAAA,EAAUT,aAAA;IACVG,MAAA;IACAN;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}