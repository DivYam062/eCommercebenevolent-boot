{"ast":null,"code":"'use client';\n\nimport { useUpdateEffect } from \"./chunk-6WEF4DIO.mjs\";\n\n// src/use-focus-effect.ts\nimport { hasFocusWithin, focus } from \"@chakra-ui/utils\";\nfunction useFocusEffect(ref, options) {\n  const {\n    shouldFocus,\n    preventScroll\n  } = options;\n  useUpdateEffect(() => {\n    const node = ref.current;\n    if (!node || !shouldFocus) return;\n    if (!hasFocusWithin(node)) {\n      focus(node, {\n        preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\nexport { useFocusEffect };","map":{"version":3,"names":["hasFocusWithin","focus","useFocusEffect","ref","options","shouldFocus","preventScroll","useUpdateEffect","node","current","nextTick"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-focus-effect.ts"],"sourcesContent":["import { hasFocusWithin, focus } from \"@chakra-ui/utils\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport type UseFocusEffectOptions = {\n  shouldFocus: boolean\n  preventScroll?: boolean\n}\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\nexport function useFocusEffect<T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  options: UseFocusEffectOptions,\n) {\n  const { shouldFocus, preventScroll } = options\n\n  useUpdateEffect(() => {\n    const node = ref.current\n\n    if (!node || !shouldFocus) return\n\n    if (!hasFocusWithin(node)) {\n      focus(node, { preventScroll, nextTick: true })\n    }\n  }, [shouldFocus, ref, preventScroll])\n}\n"],"mappings":";;;;;AAAA,SAASA,cAAA,EAAgBC,KAAA,QAAa;AAa/B,SAASC,eACdC,GAAA,EACAC,OAAA,EACA;EACA,MAAM;IAAEC,WAAA;IAAaC;EAAc,IAAIF,OAAA;EAEvCG,eAAA,CAAgB,MAAM;IACpB,MAAMC,IAAA,GAAOL,GAAA,CAAIM,OAAA;IAEjB,IAAI,CAACD,IAAA,IAAQ,CAACH,WAAA,EAAa;IAE3B,IAAI,CAACL,cAAA,CAAeQ,IAAI,GAAG;MACzBP,KAAA,CAAMO,IAAA,EAAM;QAAEF,aAAA;QAAeI,QAAA,EAAU;MAAK,CAAC;IAC/C;EACF,GAAG,CAACL,WAAA,EAAaF,GAAA,EAAKG,aAAa,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}