{"ast":null,"code":"'use client';\n\nimport { PanEvent } from \"./chunk-Z2LY7B4S.mjs\";\n\n// src/use-pan-event.ts\nimport { addPointerEvent } from \"@chakra-ui/event-utils\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { useEffect, useRef } from \"react\";\nfunction usePanEvent(ref, options) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = options;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = useRef(null);\n  const handlersRef = useLatestRef({\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  });\n  useEffect(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlersRef.current);\n  });\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || !hasPanEvents) return;\n    function onPointerDown(event) {\n      panSession.current = new PanEvent(event, handlersRef.current, threshold);\n    }\n    return addPointerEvent(node, \"pointerdown\", onPointerDown);\n  }, [ref, hasPanEvents, handlersRef, threshold]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\nexport { usePanEvent };","map":{"version":3,"names":["addPointerEvent","useLatestRef","useEffect","useRef","usePanEvent","ref","options","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","threshold","hasPanEvents","Boolean","panSession","handlersRef","onSessionStart","onSessionEnd","onStart","onMove","onEnd","event","info","current","_a","updateHandlers","node","onPointerDown","PanEvent","end"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\react-use-pan-event\\src\\use-pan-event.ts"],"sourcesContent":["import { addPointerEvent } from \"@chakra-ui/event-utils\"\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\"\nimport { useEffect, useRef } from \"react\"\nimport { PanEvent } from \"./pan-event\"\nimport { AnyPointerEvent, PanEventHandler, PanEventHandlers } from \"./types\"\n\nexport interface UsePanEventProps {\n  onPan?: PanEventHandler\n  onPanStart?: PanEventHandler\n  onPanEnd?: PanEventHandler\n  onPanSessionStart?: PanEventHandler\n  onPanSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport function usePanEvent(\n  ref: React.RefObject<HTMLElement>,\n  options: UsePanEventProps,\n) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold,\n  } = options\n\n  const hasPanEvents = Boolean(\n    onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd,\n  )\n\n  const panSession = useRef<PanEvent | null>(null)\n\n  const handlersRef = useLatestRef<Partial<PanEventHandlers>>({\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null\n      onPanEnd?.(event, info)\n    },\n  })\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlersRef.current)\n  })\n\n  useEffect(() => {\n    const node = ref.current\n\n    if (!node || !hasPanEvents) return\n\n    function onPointerDown(event: AnyPointerEvent) {\n      panSession.current = new PanEvent(event, handlersRef.current, threshold)\n    }\n\n    return addPointerEvent(node, \"pointerdown\", onPointerDown)\n  }, [ref, hasPanEvents, handlersRef, threshold])\n\n  useEffect(() => {\n    return () => {\n      panSession.current?.end()\n      panSession.current = null\n    }\n  }, [])\n}\n"],"mappings":";;;;;AAAA,SAASA,eAAA,QAAuB;AAChC,SAASC,YAAA,QAAoB;AAC7B,SAASC,SAAA,EAAWC,MAAA,QAAc;AAa3B,SAASC,YACdC,GAAA,EACAC,OAAA,EACA;EACA,MAAM;IACJC,KAAA;IACAC,UAAA;IACAC,QAAA;IACAC,iBAAA;IACAC,eAAA;IACAC;EACF,IAAIN,OAAA;EAEJ,MAAMO,YAAA,GAAeC,OAAA,CACnBP,KAAA,IAASC,UAAA,IAAcC,QAAA,IAAYC,iBAAA,IAAqBC,eAC1D;EAEA,MAAMI,UAAA,GAAaZ,MAAA,CAAwB,IAAI;EAE/C,MAAMa,WAAA,GAAcf,YAAA,CAAwC;IAC1DgB,cAAA,EAAgBP,iBAAA;IAChBQ,YAAA,EAAcP,eAAA;IACdQ,OAAA,EAASX,UAAA;IACTY,MAAA,EAAQb,KAAA;IACRc,MAAMC,KAAA,EAAOC,IAAA,EAAM;MACjBR,UAAA,CAAWS,OAAA,GAAU;MACrBf,QAAA,oBAAAA,QAAA,CAAWa,KAAA,EAAOC,IAAA;IACpB;EACF,CAAC;EAEDrB,SAAA,CAAU,MAAM;IA7ClB,IAAAuB,EAAA;IA8CI,CAAAA,EAAA,GAAAV,UAAA,CAAWS,OAAA,KAAX,gBAAAC,EAAA,CAAoBC,cAAA,CAAeV,WAAA,CAAYQ,OAAA;EACjD,CAAC;EAEDtB,SAAA,CAAU,MAAM;IACd,MAAMyB,IAAA,GAAOtB,GAAA,CAAImB,OAAA;IAEjB,IAAI,CAACG,IAAA,IAAQ,CAACd,YAAA,EAAc;IAE5B,SAASe,cAAcN,KAAA,EAAwB;MAC7CP,UAAA,CAAWS,OAAA,GAAU,IAAIK,QAAA,CAASP,KAAA,EAAON,WAAA,CAAYQ,OAAA,EAASZ,SAAS;IACzE;IAEA,OAAOZ,eAAA,CAAgB2B,IAAA,EAAM,eAAeC,aAAa;EAC3D,GAAG,CAACvB,GAAA,EAAKQ,YAAA,EAAcG,WAAA,EAAaJ,SAAS,CAAC;EAE9CV,SAAA,CAAU,MAAM;IACd,OAAO,MAAM;MA9DjB,IAAAuB,EAAA;MA+DM,CAAAA,EAAA,GAAAV,UAAA,CAAWS,OAAA,KAAX,gBAAAC,EAAA,CAAoBK,GAAA;MACpBf,UAAA,CAAWS,OAAA,GAAU;IACvB;EACF,GAAG,EAAE;AACP"},"metadata":{},"sourceType":"module","externalDependencies":[]}