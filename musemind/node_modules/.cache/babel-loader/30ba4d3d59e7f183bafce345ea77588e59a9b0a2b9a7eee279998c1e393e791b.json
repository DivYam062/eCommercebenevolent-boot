{"ast":null,"code":"'use client';\n\n// src/use-theme.ts\nimport { ThemeContext } from \"@emotion/react\";\nimport { useContext } from \"react\";\nfunction useTheme() {\n  const theme = useContext(ThemeContext);\n  if (!theme) {\n    throw Error(\"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\");\n  }\n  return theme;\n}\nexport { useTheme };","map":{"version":3,"names":["ThemeContext","useContext","useTheme","theme","Error"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\system\\src\\use-theme.ts"],"sourcesContent":["import { WithCSSVar } from \"@chakra-ui/styled-system\"\nimport { Dict } from \"@chakra-ui/utils\"\nimport { ThemeContext } from \"@emotion/react\"\nimport { useContext } from \"react\"\n\n/**\n * `useTheme` is a custom hook used to get the theme object from context.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-theme\n */\nexport function useTheme<T extends object = Dict>() {\n  const theme = useContext(\n    ThemeContext as unknown as React.Context<T | undefined>,\n  )\n  if (!theme) {\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\",\n    )\n  }\n\n  return theme as WithCSSVar<T>\n}\n"],"mappings":";;;AAEA,SAASA,YAAA,QAAoB;AAC7B,SAASC,UAAA,QAAkB;AAOpB,SAASC,SAAA,EAAoC;EAClD,MAAMC,KAAA,GAAQF,UAAA,CACZD,YACF;EACA,IAAI,CAACG,KAAA,EAAO;IACV,MAAMC,KAAA,CACJ,kHACF;EACF;EAEA,OAAOD,KAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}