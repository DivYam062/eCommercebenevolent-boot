{"ast":null,"code":"'use client';\n\n// src/use-boolean.ts\nimport { useMemo, useState } from \"react\";\nfunction useBoolean(initialState = false) {\n  const [value, setValue] = useState(initialState);\n  const callbacks = useMemo(() => ({\n    on: () => setValue(true),\n    off: () => setValue(false),\n    toggle: () => setValue(prev => !prev)\n  }), []);\n  return [value, callbacks];\n}\nexport { useBoolean };","map":{"version":3,"names":["useMemo","useState","useBoolean","initialState","value","setValue","callbacks","on","off","toggle","prev"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-boolean.ts"],"sourcesContent":["import { useMemo, useState } from \"react\"\n\ntype InitialState = boolean | (() => boolean)\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-boolean\n */\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState)\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev),\n    }),\n    [],\n  )\n  return [value, callbacks] as const\n}\n"],"mappings":";;;AAAA,SAASA,OAAA,EAASC,QAAA,QAAgB;AAW3B,SAASC,WAAWC,YAAA,GAA6B,OAAO;EAC7D,MAAM,CAACC,KAAA,EAAOC,QAAQ,IAAIJ,QAAA,CAASE,YAAY;EAC/C,MAAMG,SAAA,GAAYN,OAAA,CAChB,OAAO;IACLO,EAAA,EAAIA,CAAA,KAAMF,QAAA,CAAS,IAAI;IACvBG,GAAA,EAAKA,CAAA,KAAMH,QAAA,CAAS,KAAK;IACzBI,MAAA,EAAQA,CAAA,KAAMJ,QAAA,CAAUK,IAAA,IAAS,CAACA,IAAI;EACxC,IACA,EACF;EACA,OAAO,CAACN,KAAA,EAAOE,SAAS;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}