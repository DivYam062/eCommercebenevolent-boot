{"ast":null,"code":"'use client';\n\n// src/grid-item.tsx\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(span, value => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`);\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGridItem.displayName = \"GridItem\";\nexport { GridItem };","map":{"version":3,"names":["forwardRef","chakra","compact","mapResponsive","jsx","spanFn","span","value","GridItem","GridItem2","props","ref","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","styles","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","div","__css","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\layout\\src\\grid-item.tsx"],"sourcesContent":["import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n"],"mappings":";;;AAAA,SAGEA,UAAA,EACAC,MAAA,QACK;AACP,SAASC,OAAA,QAAe;AACxB,SAASC,aAAA,QAAqB;AAqErB,SAAAC,GAAA;AA/BT,SAASC,OAAOC,IAAA,EAAyC;EACvD,OAAOH,aAAA,CAAcG,IAAA,EAAOC,KAAA,IAC1BA,KAAA,KAAU,SAAS,SAAS,QAAQA,KAAK,SAASA,KAAK,EACzD;AACF;AAEO,IAAMC,QAAA,GAAWR,UAAA,CAAiC,SAASS,UAChEC,KAAA,EACAC,GAAA,EACA;EACA,MAAM;IACJC,IAAA;IACAC,OAAA;IACAC,QAAA;IACAC,MAAA;IACAC,MAAA;IACAC,OAAA;IACAC,QAAA;IACA,GAAGC;EACL,IAAIT,KAAA;EAEJ,MAAMU,MAAA,GAASlB,OAAA,CAAQ;IACrBmB,QAAA,EAAUT,IAAA;IACVU,UAAA,EAAYjB,MAAA,CAAOQ,OAAO;IAC1BU,OAAA,EAASlB,MAAA,CAAOY,OAAO;IACvBO,eAAA,EAAiBV,QAAA;IACjBW,aAAA,EAAeV,MAAA;IACfW,YAAA,EAAcR,QAAA;IACdS,UAAA,EAAYX;EACd,CAAC;EAED,OAAO,eAAAZ,GAAA,CAACH,MAAA,CAAO2B,GAAA,EAAP;IAAWjB,GAAA;IAAUkB,KAAA,EAAOT,MAAA;IAAS,GAAGD;EAAA,CAAM;AACxD,CAAC;AAEDX,QAAA,CAASsB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}