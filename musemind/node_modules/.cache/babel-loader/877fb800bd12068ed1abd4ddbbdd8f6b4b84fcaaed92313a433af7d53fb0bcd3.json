{"ast":null,"code":"'use client';\n\n// src/color-mode-context.ts\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\nexport { ColorModeContext, useColorMode, useColorModeValue };","map":{"version":3,"names":["createContext","useContext","ColorModeContext","displayName","useColorMode","context","Error","useColorModeValue","light","dark","colorMode"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\color-mode\\src\\color-mode-context.ts"],"sourcesContent":["import { createContext, useContext } from \"react\"\nimport { ColorModeContextType } from \"./color-mode-types\"\n\nexport const ColorModeContext = createContext({} as ColorModeContextType)\n\nColorModeContext.displayName = \"ColorModeContext\"\n\n/**\n * React hook that reads from `ColorModeProvider` context\n * Returns the color mode and function to toggle it\n */\nexport function useColorMode() {\n  const context = useContext(ColorModeContext)\n  if (context === undefined) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\")\n  }\n  return context\n}\n\n/**\n * Change value based on color mode.\n *\n * @param light the light mode value\n * @param dark the dark mode value\n *\n * @example\n *\n * ```js\n * const Icon = useColorModeValue(MoonIcon, SunIcon)\n * ```\n */\nexport function useColorModeValue<TLight = unknown, TDark = unknown>(\n  light: TLight,\n  dark: TDark,\n) {\n  const { colorMode } = useColorMode()\n  return colorMode === \"dark\" ? dark : light\n}\n"],"mappings":";;;AAAA,SAASA,aAAA,EAAeC,UAAA,QAAkB;AAGnC,IAAMC,gBAAA,GAAmBF,aAAA,CAAc,CAAC,CAAyB;AAExEE,gBAAA,CAAiBC,WAAA,GAAc;AAMxB,SAASC,aAAA,EAAe;EAC7B,MAAMC,OAAA,GAAUJ,UAAA,CAAWC,gBAAgB;EAC3C,IAAIG,OAAA,KAAY,QAAW;IACzB,MAAM,IAAIC,KAAA,CAAM,sDAAsD;EACxE;EACA,OAAOD,OAAA;AACT;AAcO,SAASE,kBACdC,KAAA,EACAC,IAAA,EACA;EACA,MAAM;IAAEC;EAAU,IAAIN,YAAA,CAAa;EACnC,OAAOM,SAAA,KAAc,SAASD,IAAA,GAAOD,KAAA;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}