{"ast":null,"code":"'use client';\n\nimport { useSafeLayoutEffect } from \"./chunk-724WJZW4.mjs\";\n\n// src/use-dimensions.ts\nimport { getBox } from \"@chakra-ui/utils\";\nimport { useRef, useState } from \"react\";\nfunction useDimensions(ref, observe) {\n  const [dimensions, setDimensions] = useState(null);\n  const rafId = useRef();\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current;\n      if (!node) return;\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node);\n        setDimensions(boxModel);\n      });\n    }\n    measure();\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\nexport { useDimensions };","map":{"version":3,"names":["getBox","useRef","useState","useDimensions","ref","observe","dimensions","setDimensions","rafId","useSafeLayoutEffect","measure","node","current","requestAnimationFrame","boxModel","window","addEventListener","removeEventListener","cancelAnimationFrame"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-dimensions.ts"],"sourcesContent":["import { getBox, BoxModel } from \"@chakra-ui/utils\"\nimport { useRef, useState } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n *\n * @deprecated use the `useSize` hook instead\n *\n * ```jsx\n * import { useSize } from \"@chakra-ui/react-use-size\"\n * ```\n */\nexport function useDimensions(\n  ref: React.RefObject<HTMLElement>,\n  observe?: boolean,\n) {\n  const [dimensions, setDimensions] = useState<BoxModel | null>(null)\n  const rafId = useRef<number>()\n\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current\n      if (!node) return\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node)\n        setDimensions(boxModel)\n      })\n    }\n\n    measure()\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure)\n      window.addEventListener(\"scroll\", measure)\n    }\n\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure)\n        window.removeEventListener(\"scroll\", measure)\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [observe])\n\n  return dimensions\n}\n"],"mappings":";;;;;AAAA,SAASA,MAAA,QAAwB;AACjC,SAASC,MAAA,EAAQC,QAAA,QAAgB;AAe1B,SAASC,cACdC,GAAA,EACAC,OAAA,EACA;EACA,MAAM,CAACC,UAAA,EAAYC,aAAa,IAAIL,QAAA,CAA0B,IAAI;EAClE,MAAMM,KAAA,GAAQP,MAAA,CAAe;EAE7BQ,mBAAA,CAAoB,MAAM;IACxB,SAASC,QAAA,EAAU;MACjB,MAAMC,IAAA,GAAOP,GAAA,CAAIQ,OAAA;MACjB,IAAI,CAACD,IAAA,EAAM;MACXH,KAAA,CAAMI,OAAA,GAAUC,qBAAA,CAAsB,MAAM;QAC1C,MAAMC,QAAA,GAAWd,MAAA,CAAOW,IAAI;QAC5BJ,aAAA,CAAcO,QAAQ;MACxB,CAAC;IACH;IAEAJ,OAAA,CAAQ;IAER,IAAIL,OAAA,EAAS;MACXU,MAAA,CAAOC,gBAAA,CAAiB,UAAUN,OAAO;MACzCK,MAAA,CAAOC,gBAAA,CAAiB,UAAUN,OAAO;IAC3C;IAEA,OAAO,MAAM;MACX,IAAIL,OAAA,EAAS;QACXU,MAAA,CAAOE,mBAAA,CAAoB,UAAUP,OAAO;QAC5CK,MAAA,CAAOE,mBAAA,CAAoB,UAAUP,OAAO;MAC9C;MAEA,IAAIF,KAAA,CAAMI,OAAA,EAAS;QACjBM,oBAAA,CAAqBV,KAAA,CAAMI,OAAO;MACpC;IACF;EACF,GAAG,CAACP,OAAO,CAAC;EAEZ,OAAOC,UAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}