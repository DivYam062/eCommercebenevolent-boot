{"ast":null,"code":"'use client';\n\nimport { BreadcrumbStylesProvider } from \"./chunk-24NX3CUR.mjs\";\n\n// src/breadcrumb.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Breadcrumb = forwardRef(function Breadcrumb2(props, ref) {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    listProps,\n    ...rest\n  } = ownProps;\n  const validChildren = getValidChildren(children);\n  const count = validChildren.length;\n  const clones = validChildren.map((child, index) => cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n  const _className = cx(\"chakra-breadcrumb\", className);\n  return /* @__PURE__ */jsx(chakra.nav, {\n    ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container,\n    ...rest,\n    children: /* @__PURE__ */jsx(BreadcrumbStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.ol, {\n        className: \"chakra-breadcrumb__list\",\n        ...listProps,\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.list\n        },\n        children: clones\n      })\n    })\n  });\n});\nBreadcrumb.displayName = \"Breadcrumb\";\nexport { Breadcrumb };","map":{"version":3,"names":["cx","getValidChildren","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cloneElement","jsx","Breadcrumb","Breadcrumb2","props","ref","styles","ownProps","children","spacing","separator","className","listProps","rest","validChildren","count","length","clones","map","child","index","isLastChild","_className","nav","__css","container","BreadcrumbStylesProvider","value","ol","display","alignItems","list","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\breadcrumb\\src\\breadcrumb.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { BreadcrumbStylesProvider } from \"./breadcrumb-context\"\nimport { BreadcrumbOptions } from \"./breadcrumb-types\"\n\nexport interface BreadcrumbProps\n  extends HTMLChakraProps<\"nav\">,\n    BreadcrumbOptions,\n    ThemingProps<\"Breadcrumb\"> {\n  listProps?: HTMLChakraProps<\"ol\">\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">(\n  function Breadcrumb(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n    const ownProps = omitThemingProps(props)\n\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps\n\n    const validChildren = getValidChildren(children)\n    const count = validChildren.length\n\n    const clones = validChildren.map((child, index) =>\n      cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1,\n      }),\n    )\n\n    const _className = cx(\"chakra-breadcrumb\", className)\n\n    return (\n      <chakra.nav\n        ref={ref}\n        aria-label=\"breadcrumb\"\n        className={_className}\n        __css={styles.container}\n        {...rest}\n      >\n        <BreadcrumbStylesProvider value={styles}>\n          <chakra.ol\n            className=\"chakra-breadcrumb__list\"\n            {...listProps}\n            __css={{\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list,\n            }}\n          >\n            {clones}\n          </chakra.ol>\n        </BreadcrumbStylesProvider>\n      </chakra.nav>\n    )\n  },\n)\n\nBreadcrumb.displayName = \"Breadcrumb\"\n"],"mappings":";;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAASC,gBAAA,QAAwB;AACjC,SACEC,MAAA,EACAC,UAAA,EAEAC,gBAAA,EAEAC,mBAAA,QACK;AACP,SAASC,YAAA,QAAoB;AAsDnB,SAAAC,GAAA;AApCH,IAAMC,UAAA,GAAaL,UAAA,CACxB,SAASM,YAAWC,KAAA,EAAOC,GAAA,EAAK;EAC9B,MAAMC,MAAA,GAASP,mBAAA,CAAoB,cAAcK,KAAK;EACtD,MAAMG,QAAA,GAAWT,gBAAA,CAAiBM,KAAK;EAEvC,MAAM;IACJI,QAAA;IACAC,OAAA,GAAU;IACVC,SAAA,GAAY;IACZC,SAAA;IACAC,SAAA;IACA,GAAGC;EACL,IAAIN,QAAA;EAEJ,MAAMO,aAAA,GAAgBnB,gBAAA,CAAiBa,QAAQ;EAC/C,MAAMO,KAAA,GAAQD,aAAA,CAAcE,MAAA;EAE5B,MAAMC,MAAA,GAASH,aAAA,CAAcI,GAAA,CAAI,CAACC,KAAA,EAAOC,KAAA,KACvCpB,YAAA,CAAamB,KAAA,EAAO;IAClBT,SAAA;IACAD,OAAA;IACAY,WAAA,EAAaN,KAAA,KAAUK,KAAA,GAAQ;EACjC,CAAC,CACH;EAEA,MAAME,UAAA,GAAa5B,EAAA,CAAG,qBAAqBiB,SAAS;EAEpD,OACE,eAAAV,GAAA,CAACL,MAAA,CAAO2B,GAAA,EAAP;IACClB,GAAA;IACA,cAAW;IACXM,SAAA,EAAWW,UAAA;IACXE,KAAA,EAAOlB,MAAA,CAAOmB,SAAA;IACb,GAAGZ,IAAA;IAEJL,QAAA,iBAAAP,GAAA,CAACyB,wBAAA;MAAyBC,KAAA,EAAOrB,MAAA;MAC/BE,QAAA,iBAAAP,GAAA,CAACL,MAAA,CAAOgC,EAAA,EAAP;QACCjB,SAAA,EAAU;QACT,GAAGC,SAAA;QACJY,KAAA,EAAO;UACLK,OAAA,EAAS;UACTC,UAAA,EAAY;UACZ,GAAGxB,MAAA,CAAOyB;QACZ;QAECvB,QAAA,EAAAS;MAAA,CACH;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAEAf,UAAA,CAAW8B,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}