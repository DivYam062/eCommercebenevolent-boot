{"ast":null,"code":"'use client';\n\n// src/use-steps.ts\nimport { useState } from \"react\";\nfunction useSteps(props = {}) {\n  const {\n    index = 0,\n    count\n  } = props;\n  const [activeStep, setActiveStep] = useState(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep) return \"complete\";\n      if (step > activeStep) return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep(step => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep(step => Math.max(0, step - 1));\n    }\n  };\n}\nexport { useSteps };","map":{"version":3,"names":["useState","useSteps","props","index","count","activeStep","setActiveStep","maxStep","activeStepPercent","isActiveStep","step","isCompleteStep","isIncompleteStep","getStatus","goToNext","Math","min","goToPrevious","max"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\stepper\\src\\use-steps.ts"],"sourcesContent":["import { useState } from \"react\"\n\nexport type UseStepsProps = {\n  index?: number\n  count?: number\n}\n\nexport type StepStatus = \"complete\" | \"active\" | \"incomplete\"\n\nexport function useSteps(props: UseStepsProps = {}) {\n  const { index = 0, count } = props\n\n  const [activeStep, setActiveStep] = useState(index)\n\n  const maxStep = typeof count === \"number\" ? count - 1 : 0\n  const activeStepPercent = activeStep / maxStep\n\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step: number) {\n      return step === activeStep\n    },\n    isCompleteStep(step: number) {\n      return step < activeStep\n    },\n    isIncompleteStep(step: number) {\n      return step > activeStep\n    },\n    getStatus(step: number): StepStatus {\n      if (step < activeStep) return \"complete\"\n      if (step > activeStep) return \"incomplete\"\n      return \"active\"\n    },\n    goToNext() {\n      setActiveStep((step) => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1\n      })\n    },\n    goToPrevious() {\n      setActiveStep((step) => Math.max(0, step - 1))\n    },\n  }\n}\n\nexport type UseStepsReturn = ReturnType<typeof useSteps>\n"],"mappings":";;;AAAA,SAASA,QAAA,QAAgB;AASlB,SAASC,SAASC,KAAA,GAAuB,CAAC,GAAG;EAClD,MAAM;IAAEC,KAAA,GAAQ;IAAGC;EAAM,IAAIF,KAAA;EAE7B,MAAM,CAACG,UAAA,EAAYC,aAAa,IAAIN,QAAA,CAASG,KAAK;EAElD,MAAMI,OAAA,GAAU,OAAOH,KAAA,KAAU,WAAWA,KAAA,GAAQ,IAAI;EACxD,MAAMI,iBAAA,GAAoBH,UAAA,GAAaE,OAAA;EAEvC,OAAO;IACLF,UAAA;IACAC,aAAA;IACAE,iBAAA;IACAC,aAAaC,IAAA,EAAc;MACzB,OAAOA,IAAA,KAASL,UAAA;IAClB;IACAM,eAAeD,IAAA,EAAc;MAC3B,OAAOA,IAAA,GAAOL,UAAA;IAChB;IACAO,iBAAiBF,IAAA,EAAc;MAC7B,OAAOA,IAAA,GAAOL,UAAA;IAChB;IACAQ,UAAUH,IAAA,EAA0B;MAClC,IAAIA,IAAA,GAAOL,UAAA,EAAY,OAAO;MAC9B,IAAIK,IAAA,GAAOL,UAAA,EAAY,OAAO;MAC9B,OAAO;IACT;IACAS,SAAA,EAAW;MACTR,aAAA,CAAeI,IAAA,IAAS;QACtB,OAAO,OAAON,KAAA,KAAU,WAAWW,IAAA,CAAKC,GAAA,CAAIZ,KAAA,EAAOM,IAAA,GAAO,CAAC,IAAIA,IAAA,GAAO;MACxE,CAAC;IACH;IACAO,aAAA,EAAe;MACbX,aAAA,CAAeI,IAAA,IAASK,IAAA,CAAKG,GAAA,CAAI,GAAGR,IAAA,GAAO,CAAC,CAAC;IAC/C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}