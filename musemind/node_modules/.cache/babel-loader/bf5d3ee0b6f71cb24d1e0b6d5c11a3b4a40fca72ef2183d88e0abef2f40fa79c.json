{"ast":null,"code":"'use client';\n\nimport { getProgressProps, progress, stripe } from \"./chunk-TXZFUZNG.mjs\";\n\n// src/progress.tsx\nimport { chakra, omitThemingProps, useMultiStyleConfig, forwardRef } from \"@chakra-ui/system\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nvar ProgressFilledTrack = forwardRef((props, ref) => {\n  const {\n    min,\n    max,\n    value,\n    isIndeterminate,\n    role,\n    ...rest\n  } = props;\n  const progress2 = getProgressProps({\n    value,\n    min,\n    max,\n    isIndeterminate,\n    role\n  });\n  const styles = useProgressStyles();\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    style: {\n      width: `${progress2.percent}%`,\n      ...rest.style\n    },\n    ...progress2.bind,\n    ...rest,\n    __css: trackStyles\n  });\n});\nvar Progress = forwardRef((props, ref) => {\n  var _a;\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius != null ? propBorderRadius : (_a = styles.track) == null ? void 0 : _a.borderRadius;\n  const stripeAnimation = {\n    animation: `${stripe} 1s linear infinite`\n  };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...(shouldAnimateStripe && stripeAnimation),\n    ...(isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    })\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    borderRadius,\n    __css: trackStyles,\n    ...rest,\n    children: /* @__PURE__ */jsxs(ProgressStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(ProgressFilledTrack, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-valuetext\": ariaValueText,\n        min,\n        max,\n        value,\n        isIndeterminate,\n        css,\n        borderRadius,\n        title,\n        role\n      }), children]\n    })\n  });\n});\nProgress.displayName = \"Progress\";\nexport { useProgressStyles, Progress };","map":{"version":3,"names":["chakra","omitThemingProps","useMultiStyleConfig","forwardRef","createContext","jsx","jsxs","ProgressStylesProvider","useProgressStyles","name","errorMessage","ProgressFilledTrack","props","ref","min","max","value","isIndeterminate","role","rest","progress2","getProgressProps","styles","trackStyles","height","filledTrack","div","style","width","percent","bind","__css","Progress","_a","hasStripe","isAnimated","children","borderRadius","propBorderRadius","ariaLabel","ariaLabelledBy","ariaValueText","title","track","stripeAnimation","animation","stripe","shouldAddStripe","shouldAnimateStripe","css","position","willChange","minWidth","progress","overflow","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\progress\\src\\progress.tsx"],"sourcesContent":["import {\n  chakra,\n  Interpolation,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  getProgressProps,\n  GetProgressPropsOptions,\n  progress,\n  stripe,\n} from \"./progress.utils\"\n\nconst [ProgressStylesProvider, useProgressStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `,\n})\n\nexport { useProgressStyles }\n\nexport interface ProgressFilledTrackProps\n  extends HTMLChakraProps<\"div\">,\n    GetProgressPropsOptions {}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nconst ProgressFilledTrack = forwardRef<ProgressFilledTrackProps, \"div\">(\n  (props, ref) => {\n    const { min, max, value, isIndeterminate, role, ...rest } = props\n    const progress = getProgressProps({\n      value,\n      min,\n      max,\n      isIndeterminate,\n      role,\n    })\n\n    const styles = useProgressStyles()\n    const trackStyles = {\n      height: \"100%\",\n      ...styles.filledTrack,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        style={{ width: `${progress.percent}%`, ...rest.style }}\n        {...progress.bind}\n        {...rest}\n        __css={trackStyles}\n      />\n    )\n  },\n)\n\nexport interface ProgressTrackProps extends HTMLChakraProps<\"div\"> {}\n\ninterface ProgressOptions {\n  /**\n   * The `value` of the progress indicator.\n   * If `undefined` the progress bar will be in `indeterminate` state\n   */\n  value?: number\n  /**\n   * The minimum value of the progress\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum value of the progress\n   * @default 100\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe\n   *\n   * @default false\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated\n   *\n   * @default false\n   */\n  isAnimated?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value`\n   * prop will be ignored\n   *\n   * @default false\n   */\n  isIndeterminate?: boolean\n}\n\nexport interface ProgressProps\n  extends ProgressOptions,\n    ThemingProps<\"Progress\">,\n    HTMLChakraProps<\"div\"> {}\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nexport const Progress = forwardRef<ProgressProps, \"div\">((props, ref) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Progress\", props)\n\n  const borderRadius =\n    propBorderRadius ??\n    (styles.track?.borderRadius as string | number | undefined)\n\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` }\n\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n  const shouldAddStripe = !isIndeterminate && hasStripe\n\n  const shouldAnimateStripe = shouldAddStripe && isAnimated\n\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n  const css: Interpolation<any> = {\n    ...(shouldAnimateStripe && stripeAnimation),\n    ...(isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`,\n    }),\n  }\n\n  const trackStyles: SystemStyleObject = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      borderRadius={borderRadius}\n      __css={trackStyles}\n      {...rest}\n    >\n      <ProgressStylesProvider value={styles}>\n        <ProgressFilledTrack\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-valuetext={ariaValueText}\n          min={min}\n          max={max}\n          value={value}\n          isIndeterminate={isIndeterminate}\n          css={css}\n          borderRadius={borderRadius}\n          title={title}\n          role={role}\n        />\n        {children}\n      </ProgressStylesProvider>\n    </chakra.div>\n  )\n})\n\nProgress.displayName = \"Progress\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}