{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement } from \"react\";\nfunction PopoverTrigger(props) {\n  const child = Children.only(props.children);\n  const {\n    getTriggerProps\n  } = usePopoverContext();\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\nPopoverTrigger.displayName = \"PopoverTrigger\";\nexport { PopoverTrigger };","map":{"version":3,"names":["Children","cloneElement","PopoverTrigger","props","child","only","children","getTriggerProps","usePopoverContext","ref","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\popover\\src\\popover-trigger.tsx"],"sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\nexport function PopoverTrigger(props: { children: React.ReactNode }) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\"\n"],"mappings":";;;;;AAAA,SAASA,QAAA,EAAUC,YAAA,QAAoB;AAQhC,SAASC,eAAeC,KAAA,EAAsC;EAEnE,MAAMC,KAAA,GAAaJ,QAAA,CAASK,IAAA,CAAKF,KAAA,CAAMG,QAAQ;EAC/C,MAAM;IAAEC;EAAgB,IAAIC,iBAAA,CAAkB;EAC9C,OAAOP,YAAA,CAAaG,KAAA,EAAOG,eAAA,CAAgBH,KAAA,CAAMD,KAAA,EAAOC,KAAA,CAAMK,GAAG,CAAC;AACpE;AAEAP,cAAA,CAAeQ,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}