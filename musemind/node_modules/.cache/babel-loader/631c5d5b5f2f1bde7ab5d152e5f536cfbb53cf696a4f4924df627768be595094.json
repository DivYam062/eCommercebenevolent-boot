{"ast":null,"code":"'use client';\n\nimport { useInputGroupStyles } from \"./chunk-FKYN3ZGE.mjs\";\n\n// src/input-element.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const {\n    placement = \"left\",\n    ...rest\n  } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */jsx(StyledInputElement, {\n    ref,\n    __css: elementStyles,\n    ...rest\n  });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(function InputLeftElement2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-input__left-element\", className);\n  return /* @__PURE__ */jsx(InputElement, {\n    ref,\n    placement: \"left\",\n    className: _className,\n    ...rest\n  });\n});\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(function InputRightElement2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-input__right-element\", className);\n  return /* @__PURE__ */jsx(InputElement, {\n    ref,\n    placement: \"right\",\n    className: _className,\n    ...rest\n  });\n});\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\nexport { InputLeftElement, InputRightElement };","map":{"version":3,"names":["chakra","forwardRef","cx","jsx","StyledInputElement","baseStyle","display","alignItems","justifyContent","position","top","zIndex","InputElement","InputElement2","props","ref","_a","_b","placement","rest","styles","useInputGroupStyles","input","field","attr","elementStyles","width","height","h","fontSize","element","__css","id","displayName","InputLeftElement","InputLeftElement2","className","_className","InputRightElement","InputRightElement2"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\input\\src\\input-element.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useInputGroupStyles } from \"./input-group\"\n\nexport interface InputElementProps extends HTMLChakraProps<\"div\"> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">(function InputElement(\n  props,\n  ref,\n) {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useInputGroupStyles()\n  const input: any = styles.field\n\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\"\n\n  const elementStyles: SystemStyleObject = {\n    [attr]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n    ...styles.element,\n  }\n\n  return <StyledInputElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nInputElement.displayName = \"InputElement\"\n\nexport type InputLeftElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputLeftElement = forwardRef<InputLeftElementProps, \"div\">(\n  function InputLeftElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nInputLeftElement.displayName = \"InputLeftElement\"\n\nexport type InputRightElementProps = Omit<InputElementProps, \"placement\">\n\nexport const InputRightElement = forwardRef<InputRightElementProps, \"div\">(\n  function InputRightElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nInputRightElement.displayName = \"InputRightElement\"\n"],"mappings":";;;;;AAAA,SACEA,MAAA,EACAC,UAAA,QAGK;AACP,SAASC,EAAA,QAAU;AAqCV,SAAAC,GAAA;AA9BT,IAAMC,kBAAA,GAAqBJ,MAAA,CAAO,OAAO;EACvCK,SAAA,EAAW;IACTC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,cAAA,EAAgB;IAChBC,QAAA,EAAU;IACVC,GAAA,EAAK;IACLC,MAAA,EAAQ;EACV;AACF,CAAC;AAED,IAAMC,YAAA,GAAeX,UAAA,CAAqC,SAASY,cACjEC,KAAA,EACAC,GAAA,EACA;EA3BF,IAAAC,EAAA,EAAAC,EAAA;EA4BE,MAAM;IAAEC,SAAA,GAAY;IAAQ,GAAGC;EAAK,IAAIL,KAAA;EAExC,MAAMM,MAAA,GAASC,mBAAA,CAAoB;EACnC,MAAMC,KAAA,GAAaF,MAAA,CAAOG,KAAA;EAE1B,MAAMC,IAAA,GAAON,SAAA,KAAc,SAAS,eAAe;EAEnD,MAAMO,aAAA,GAAmC;IACvC,CAACD,IAAI,GAAG;IACRE,KAAA,GAAOV,EAAA,GAAAM,KAAA,oBAAAA,KAAA,CAAOK,MAAA,KAAP,OAAAX,EAAA,GAAiBM,KAAA,oBAAAA,KAAA,CAAOM,CAAA;IAC/BD,MAAA,GAAQV,EAAA,GAAAK,KAAA,oBAAAA,KAAA,CAAOK,MAAA,KAAP,OAAAV,EAAA,GAAiBK,KAAA,oBAAAA,KAAA,CAAOM,CAAA;IAChCC,QAAA,EAAUP,KAAA,oBAAAA,KAAA,CAAOO,QAAA;IACjB,GAAGT,MAAA,CAAOU;EACZ;EAEA,OAAO,eAAA3B,GAAA,CAACC,kBAAA;IAAmBW,GAAA;IAAUgB,KAAA,EAAON,aAAA;IAAgB,GAAGN;EAAA,CAAM;AACvE,CAAC;AAGDP,YAAA,CAAaoB,EAAA,GAAK;AAElBpB,YAAA,CAAaqB,WAAA,GAAc;AAIpB,IAAMC,gBAAA,GAAmBjC,UAAA,CAC9B,SAASkC,kBAAiBrB,KAAA,EAAOC,GAAA,EAAK;EACpC,MAAM;IAAEqB,SAAA;IAAW,GAAGjB;EAAK,IAAIL,KAAA;EAC/B,MAAMuB,UAAA,GAAanC,EAAA,CAAG,8BAA8BkC,SAAS;EAE7D,OACE,eAAAjC,GAAA,CAACS,YAAA;IACCG,GAAA;IACAG,SAAA,EAAU;IACVkB,SAAA,EAAWC,UAAA;IACV,GAAGlB;EAAA,CACN;AAEJ,CACF;AAGAe,gBAAA,CAAiBF,EAAA,GAAK;AAEtBE,gBAAA,CAAiBD,WAAA,GAAc;AAIxB,IAAMK,iBAAA,GAAoBrC,UAAA,CAC/B,SAASsC,mBAAkBzB,KAAA,EAAOC,GAAA,EAAK;EACrC,MAAM;IAAEqB,SAAA;IAAW,GAAGjB;EAAK,IAAIL,KAAA;EAC/B,MAAMuB,UAAA,GAAanC,EAAA,CAAG,+BAA+BkC,SAAS;EAE9D,OACE,eAAAjC,GAAA,CAACS,YAAA;IACCG,GAAA;IACAG,SAAA,EAAU;IACVkB,SAAA,EAAWC,UAAA;IACV,GAAGlB;EAAA,CACN;AAEJ,CACF;AAGAmB,iBAAA,CAAkBN,EAAA,GAAK;AAEvBM,iBAAA,CAAkBL,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}