{"ast":null,"code":"'use client';\n\n// src/container.tsx\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const {\n    className,\n    centerContent,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    className: cx(\"chakra-container\", className),\n    ...rest,\n    __css: {\n      ...styles,\n      ...(centerContent && {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      })\n    }\n  });\n});\nContainer.displayName = \"Container\";\nexport { Container };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","jsx","Container","Container2","props","ref","className","centerContent","rest","styles","div","__css","display","flexDirection","alignItems","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\layout\\src\\container.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n"],"mappings":";;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAEAC,cAAA,QAEK;AACP,SAASC,EAAA,QAAU;AAiCf,SAAAC,GAAA;AATG,IAAMC,SAAA,GAAYL,UAAA,CAAkC,SAASM,WAClEC,KAAA,EACAC,GAAA,EACA;EACA,MAAM;IAAEC,SAAA;IAAWC,aAAA;IAAe,GAAGC;EAAK,IAAIV,gBAAA,CAAiBM,KAAK;EAEpE,MAAMK,MAAA,GAASV,cAAA,CAAe,aAAaK,KAAK;EAEhD,OACE,eAAAH,GAAA,CAACL,MAAA,CAAOc,GAAA,EAAP;IACCL,GAAA;IACAC,SAAA,EAAWN,EAAA,CAAG,oBAAoBM,SAAS;IAC1C,GAAGE,IAAA;IACJG,KAAA,EAAO;MACL,GAAGF,MAAA;MACH,IAAIF,aAAA,IAAiB;QACnBK,OAAA,EAAS;QACTC,aAAA,EAAe;QACfC,UAAA,EAAY;MACd;IACF;EAAA,CACF;AAEJ,CAAC;AAEDZ,SAAA,CAAUa,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}