{"ast":null,"code":"'use client';\n\nimport { useFormControlContext } from \"./chunk-DFWC5MHP.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const {\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    isRequired,\n    ...rest\n  } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\nexport { useFormControl, useFormControlProps };","map":{"version":3,"names":["ariaAttr","callAllHandlers","useFormControl","props","isDisabled","isInvalid","isReadOnly","isRequired","rest","useFormControlProps","disabled","readOnly","required","_a","_b","_c","field","useFormControlContext","id","onFocus","onBlur","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\form-control\\src\\use-form-control.ts"],"sourcesContent":["import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,QAAA,EAAUC,eAAA,QAAuB;AAuBnC,SAASC,eACdC,KAAA,EACA;EACA,MAAM;IAAEC,UAAA;IAAYC,SAAA;IAAWC,UAAA;IAAYC,UAAA;IAAY,GAAGC;EAAK,IAC7DC,mBAAA,CAAoBN,KAAK;EAE3B,OAAO;IACL,GAAGK,IAAA;IACHE,QAAA,EAAUN,UAAA;IACVO,QAAA,EAAUL,UAAA;IACVM,QAAA,EAAUL,UAAA;IACV,gBAAgBP,QAAA,CAASK,SAAS;IAClC,iBAAiBL,QAAA,CAASO,UAAU;IACpC,iBAAiBP,QAAA,CAASM,UAAU;EACtC;AACF;AAKO,SAASG,oBACdN,KAAA,EACA;EA7CF,IAAAU,EAAA,EAAAC,EAAA,EAAAC,EAAA;EA8CE,MAAMC,KAAA,GAAQC,qBAAA,CAAsB;EAEpC,MAAM;IACJC,EAAA;IACAR,QAAA;IACAC,QAAA;IACAC,QAAA;IACAL,UAAA;IACAF,SAAA;IACAC,UAAA;IACAF,UAAA;IACAe,OAAA;IACAC,MAAA;IACA,GAAGZ;EACL,IAAIL,KAAA;EAEJ,MAAMkB,QAAA,GAAqBlB,KAAA,CAAM,kBAAkB,IAC/C,CAACA,KAAA,CAAM,kBAAkB,CAAC,IAC1B,EAAC;EAGL,KAAIa,KAAA,oBAAAA,KAAA,CAAOM,eAAA,MAAmBN,KAAA,oBAAAA,KAAA,CAAOX,SAAA,GAAW;IAC9CgB,QAAA,CAASE,IAAA,CAAKP,KAAA,CAAMQ,UAAU;EAChC;EAEA,IAAIR,KAAA,oBAAAA,KAAA,CAAOS,WAAA,EAAa;IACtBJ,QAAA,CAASE,IAAA,CAAKP,KAAA,CAAMU,UAAU;EAChC;EAEA,OAAO;IACL,GAAGlB,IAAA;IACH,oBAAoBa,QAAA,CAASM,IAAA,CAAK,GAAG,KAAK;IAC1CT,EAAA,EAAIA,EAAA,WAAAA,EAAA,GAAMF,KAAA,oBAAAA,KAAA,CAAOE,EAAA;IACjBd,UAAA,GAAYS,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYN,UAAA,KAAZ,OAAAS,EAAA,GAA0BG,KAAA,oBAAAA,KAAA,CAAOZ,UAAA;IAC7CE,UAAA,GAAYQ,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYL,UAAA,KAAZ,OAAAQ,EAAA,GAA0BE,KAAA,oBAAAA,KAAA,CAAOV,UAAA;IAC7CC,UAAA,GAAYQ,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYL,UAAA,KAAZ,OAAAQ,EAAA,GAA0BC,KAAA,oBAAAA,KAAA,CAAOT,UAAA;IAC7CF,SAAA,EAAWA,SAAA,WAAAA,SAAA,GAAaW,KAAA,oBAAAA,KAAA,CAAOX,SAAA;IAC/Bc,OAAA,EAASlB,eAAA,CAAgBe,KAAA,oBAAAA,KAAA,CAAOG,OAAA,EAASA,OAAO;IAChDC,MAAA,EAAQnB,eAAA,CAAgBe,KAAA,oBAAAA,KAAA,CAAOI,MAAA,EAAQA,MAAM;EAC/C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}