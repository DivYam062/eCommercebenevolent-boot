{"ast":null,"code":"'use client';\n\nimport { ModalTransition } from \"./chunk-7NUJBCEL.mjs\";\nimport { ModalFocusScope } from \"./chunk-NABYTFTG.mjs\";\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-content.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalContent = forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    containerProps: rootProps,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    getDialogProps,\n    getDialogContainerProps\n  } = useModalContext();\n  const dialogProps = getDialogProps(rest, ref);\n  const containerProps = getDialogContainerProps(rootProps);\n  const _className = cx(\"chakra-modal__content\", className);\n  const styles = useModalStyles();\n  const dialogStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.dialog\n  };\n  const dialogContainerStyles = {\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    ...styles.dialogContainer\n  };\n  const {\n    motionPreset\n  } = useModalContext();\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ...containerProps,\n      className: \"chakra-modal__content-container\",\n      tabIndex: -1,\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(ModalTransition, {\n        preset: motionPreset,\n        motionProps,\n        className: _className,\n        ...dialogProps,\n        __css: dialogStyles,\n        children\n      })\n    })\n  });\n});\nModalContent.displayName = \"ModalContent\";\nexport { ModalContent };","map":{"version":3,"names":["cx","chakra","forwardRef","jsx","ModalContent","props","ref","className","children","containerProps","rootProps","motionProps","rest","getDialogProps","getDialogContainerProps","useModalContext","dialogProps","_className","styles","useModalStyles","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","motionPreset","ModalFocusScope","div","tabIndex","__css","ModalTransition","preset","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\modal\\src\\modal-content.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  chakra,\n  SystemStyleObject,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { HTMLMotionProps } from \"framer-motion\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\nimport { ModalFocusScope } from \"./modal-focus\"\nimport { ModalTransition } from \"./modal-transition\"\n\nexport interface ModalContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n  /**\n   * The custom framer-motion transition to use for the modal\n   */\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const ModalContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      containerProps: rootProps,\n      motionProps,\n      ...rest\n    } = props\n\n    const { getDialogProps, getDialogContainerProps } = useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useModalStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { motionPreset } = useModalContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          tabIndex={-1}\n          __css={dialogContainerStyles}\n        >\n          <ModalTransition\n            preset={motionPreset}\n            motionProps={motionProps}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </ModalTransition>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nModalContent.displayName = \"ModalContent\"\n"],"mappings":";;;;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAEEC,MAAA,EAEAC,UAAA,QACK;AAsEG,SAAAC,GAAA;AAhDH,IAAMC,YAAA,GAAeF,UAAA,CAC1B,CAACG,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAM;IACJC,SAAA;IACAC,QAAA;IACAC,cAAA,EAAgBC,SAAA;IAChBC,WAAA;IACA,GAAGC;EACL,IAAIP,KAAA;EAEJ,MAAM;IAAEQ,cAAA;IAAgBC;EAAwB,IAAIC,eAAA,CAAgB;EAEpE,MAAMC,WAAA,GAAcH,cAAA,CAAeD,IAAA,EAAMN,GAAG;EAC5C,MAAMG,cAAA,GAAiBK,uBAAA,CAAwBJ,SAAS;EAExD,MAAMO,UAAA,GAAajB,EAAA,CAAG,yBAAyBO,SAAS;EAExD,MAAMW,MAAA,GAASC,cAAA,CAAe;EAE9B,MAAMC,YAAA,GAAkC;IACtCC,OAAA,EAAS;IACTC,aAAA,EAAe;IACfC,QAAA,EAAU;IACVC,KAAA,EAAO;IACPC,OAAA,EAAS;IACT,GAAGP,MAAA,CAAOQ;EACZ;EAEA,MAAMC,qBAAA,GAA2C;IAC/CN,OAAA,EAAS;IACTG,KAAA,EAAO;IACPI,MAAA,EAAQ;IACRL,QAAA,EAAU;IACVM,IAAA,EAAM;IACNC,GAAA,EAAK;IACL,GAAGZ,MAAA,CAAOa;EACZ;EAEA,MAAM;IAAEC;EAAa,IAAIjB,eAAA,CAAgB;EAEzC,OACE,eAAAZ,GAAA,CAAC8B,eAAA;IACCzB,QAAA,iBAAAL,GAAA,CAACF,MAAA,CAAOiC,GAAA,EAAP;MACE,GAAGzB,cAAA;MACJF,SAAA,EAAU;MACV4B,QAAA,EAAU;MACVC,KAAA,EAAOT,qBAAA;MAEPnB,QAAA,iBAAAL,GAAA,CAACkC,eAAA;QACCC,MAAA,EAAQN,YAAA;QACRrB,WAAA;QACAJ,SAAA,EAAWU,UAAA;QACV,GAAGD,WAAA;QACJoB,KAAA,EAAOhB,YAAA;QAENZ;MAAA,CACH;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAEAJ,YAAA,CAAamC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}