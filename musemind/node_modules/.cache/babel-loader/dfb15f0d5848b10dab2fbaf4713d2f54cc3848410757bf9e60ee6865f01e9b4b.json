{"ast":null,"code":"'use client';\n\nimport { ToastProvider } from \"./chunk-3Y4YXCR2.mjs\";\nimport { createToastFn } from \"./chunk-HYCJNCPE.mjs\";\n\n// src/create-standalone-toast.tsx\nimport { ColorModeContext, ThemeProvider } from \"@chakra-ui/system\";\nimport { theme as defaultTheme } from \"@chakra-ui/theme\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaults = {\n  duration: 5e3,\n  variant: \"solid\"\n};\nvar defaultStandaloneParam = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false\n};\nfunction createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced\n} = defaultStandaloneParam) {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced\n  };\n  const ToastContainer = () => /* @__PURE__ */jsx(ThemeProvider, {\n    theme,\n    children: /* @__PURE__ */jsx(ColorModeContext.Provider, {\n      value: colorModeContextValue,\n      children: /* @__PURE__ */jsx(ToastProvider, {\n        defaultOptions,\n        motionVariants,\n        toastSpacing,\n        component\n      })\n    })\n  });\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions)\n  };\n}\nexport { defaultStandaloneParam, createStandaloneToast };","map":{"version":3,"names":["ColorModeContext","ThemeProvider","theme","defaultTheme","jsx","defaults","duration","variant","defaultStandaloneParam","colorMode","toggleColorMode","setColorMode","defaultOptions","forced","createStandaloneToast","motionVariants","toastSpacing","component","colorModeContextValue","ToastContainer","children","Provider","value","ToastProvider","toast","createToastFn","direction"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\toast\\src\\create-standalone-toast.tsx"],"sourcesContent":["import {\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport { theme as defaultTheme } from \"@chakra-ui/theme\"\nimport { ToastProvider, ToastProviderProps } from \"./toast.provider\"\nimport { UseToastOptions } from \"./use-toast\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\n\nconst defaults: UseToastOptions = {\n  duration: 5000,\n  variant: \"solid\",\n}\n\nexport interface CreateStandAloneToastParam\n  extends Partial<\n      ReturnType<typeof useChakra> & {\n        setColorMode: (value: ColorMode) => void\n        defaultOptions: UseToastOptions\n      }\n    >,\n    Omit<ToastProviderProps, \"children\"> {}\n\nexport const defaultStandaloneParam: CreateStandAloneToastParam &\n  Required<Omit<CreateStandAloneToastParam, keyof ToastProviderProps>> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false,\n}\n\nexport type CreateStandaloneToastReturn = {\n  ToastContainer: () => JSX.Element\n  toast: CreateToastFnReturn\n}\n\n/**\n * Create a toast\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced,\n}: CreateStandAloneToastParam = defaultStandaloneParam): CreateStandaloneToastReturn {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced,\n  }\n  const ToastContainer = () => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider value={colorModeContextValue}>\n        <ToastProvider\n          defaultOptions={defaultOptions}\n          motionVariants={motionVariants}\n          toastSpacing={toastSpacing}\n          component={component}\n        />\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions),\n  }\n}\n"],"mappings":";;;;;;AAAA,SAEEA,gBAAA,EACAC,aAAA,QAEK;AACP,SAASC,KAAA,IAASC,YAAA,QAAoB;AAyD9B,SAAAC,GAAA;AApDR,IAAMC,QAAA,GAA4B;EAChCC,QAAA,EAAU;EACVC,OAAA,EAAS;AACX;AAWO,IAAMC,sBAAA,GAC4D;EACvEN,KAAA,EAAOC,YAAA;EACPM,SAAA,EAAW;EACXC,eAAA,EAAiBA,CAAA,KAAM,CAAC;EACxBC,YAAA,EAAcA,CAAA,KAAM,CAAC;EACrBC,cAAA,EAAgBP,QAAA;EAChBQ,MAAA,EAAQ;AACV;AAUO,SAASC,sBAAsB;EACpCZ,KAAA,GAAQM,sBAAA,CAAuBN,KAAA;EAC/BO,SAAA,GAAYD,sBAAA,CAAuBC,SAAA;EACnCC,eAAA,GAAkBF,sBAAA,CAAuBE,eAAA;EACzCC,YAAA,GAAeH,sBAAA,CAAuBG,YAAA;EACtCC,cAAA,GAAiBJ,sBAAA,CAAuBI,cAAA;EACxCG,cAAA;EACAC,YAAA;EACAC,SAAA;EACAJ;AACF,IAAgCL,sBAAA,EAAqD;EACnF,MAAMU,qBAAA,GAAwB;IAC5BT,SAAA;IACAE,YAAA;IACAD,eAAA;IACAG;EACF;EACA,MAAMM,cAAA,GAAiBA,CAAA,KACrB,eAAAf,GAAA,CAACH,aAAA;IAAcC,KAAA;IACbkB,QAAA,iBAAAhB,GAAA,CAACJ,gBAAA,CAAiBqB,QAAA,EAAjB;MAA0BC,KAAA,EAAOJ,qBAAA;MAChCE,QAAA,iBAAAhB,GAAA,CAACmB,aAAA;QACCX,cAAA;QACAG,cAAA;QACAC,YAAA;QACAC;MAAA,CACF;IAAA,CACF;EAAA,CACF;EAGF,OAAO;IACLE,cAAA;IACAK,KAAA,EAAOC,aAAA,CAAcvB,KAAA,CAAMwB,SAAA,EAAWd,cAAc;EACtD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}