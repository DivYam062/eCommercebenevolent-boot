{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nvar isDom = () => typeof window !== \"undefined\";\nfunction getPlatform() {\n  var _a;\n  const agent = navigator.userAgentData;\n  return (_a = agent == null ? void 0 : agent.platform) != null ? _a : navigator.platform;\n}\nvar vn = v => isDom() && v.test(navigator.vendor);\nvar pt = v => isDom() && v.test(getPlatform());\nvar isApple = () => pt(/mac|iphone|ipad|ipod/i);\nvar isSafari = () => isApple() && vn(/apple/i);\nfunction useFocusOnPointerDown(props) {\n  const {\n    ref,\n    elements,\n    enabled\n  } = props;\n  const doc = () => {\n    var _a, _b;\n    return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n  };\n  useEventListener(doc, \"pointerdown\", event => {\n    if (!isSafari() || !enabled) return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (el == null ? void 0 : el.contains(target)) || el === target;\n    });\n    if (doc().activeElement !== target && isValidTarget) {\n      event.preventDefault();\n      target.focus();\n    }\n  });\n}\nexport { useFocusOnPointerDown };","map":{"version":3,"names":["useEventListener","isRefObject","val","isDom","window","getPlatform","_a","agent","navigator","userAgentData","platform","vn","v","test","vendor","pt","isApple","isSafari","useFocusOnPointerDown","props","ref","elements","enabled","doc","_b","current","ownerDocument","document","event","target","els","isValidTarget","some","elementOrRef","el","contains","activeElement","preventDefault","focus"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\react-use-focus-on-pointer-down\\src\\index.ts"],"sourcesContent":["import { useEventListener } from \"@chakra-ui/react-use-event-listener\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\nfunction isRefObject(val: any): val is { current: any } {\n  return \"current\" in val\n}\n\nconst isDom = () => typeof window !== \"undefined\"\nfunction getPlatform() {\n  const agent = (navigator as any).userAgentData\n  return agent?.platform ?? navigator.platform\n}\nconst vn = (v: RegExp) => isDom() && v.test(navigator.vendor)\nconst pt = (v: RegExp) => isDom() && v.test(getPlatform())\nconst isApple = () => pt(/mac|iphone|ipad|ipod/i)\nconst isSafari = () => isApple() && vn(/apple/i)\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const doc = () => ref.current?.ownerDocument ?? document\n\n  useEventListener(doc, \"pointerdown\", (event) => {\n    if (!isSafari() || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return el?.contains(target) || el === target\n    })\n\n    if (doc().activeElement !== target && isValidTarget) {\n      event.preventDefault()\n      target.focus()\n    }\n  })\n}\n"],"mappings":";;;AAAA,SAASA,gBAAA,QAAwB;AAQjC,SAASC,YAAYC,GAAA,EAAmC;EACtD,OAAO,aAAaA,GAAA;AACtB;AAEA,IAAMC,KAAA,GAAQA,CAAA,KAAM,OAAOC,MAAA,KAAW;AACtC,SAASC,YAAA,EAAc;EAbvB,IAAAC,EAAA;EAcE,MAAMC,KAAA,GAASC,SAAA,CAAkBC,aAAA;EACjC,QAAOH,EAAA,GAAAC,KAAA,oBAAAA,KAAA,CAAOG,QAAA,KAAP,OAAAJ,EAAA,GAAmBE,SAAA,CAAUE,QAAA;AACtC;AACA,IAAMC,EAAA,GAAMC,CAAA,IAAcT,KAAA,CAAM,KAAKS,CAAA,CAAEC,IAAA,CAAKL,SAAA,CAAUM,MAAM;AAC5D,IAAMC,EAAA,GAAMH,CAAA,IAAcT,KAAA,CAAM,KAAKS,CAAA,CAAEC,IAAA,CAAKR,WAAA,CAAY,CAAC;AACzD,IAAMW,OAAA,GAAUA,CAAA,KAAMD,EAAA,CAAG,uBAAuB;AAChD,IAAME,QAAA,GAAWA,CAAA,KAAMD,OAAA,CAAQ,KAAKL,EAAA,CAAG,QAAQ;AAWxC,SAASO,sBAAsBC,KAAA,EAAiC;EACrE,MAAM;IAAEC,GAAA;IAAKC,QAAA;IAAUC;EAAQ,IAAIH,KAAA;EAEnC,MAAMI,GAAA,GAAMA,CAAA,KAAG;IAlCjB,IAAAjB,EAAA,EAAAkB,EAAA;IAkCoB,QAAAA,EAAA,IAAAlB,EAAA,GAAAc,GAAA,CAAIK,OAAA,KAAJ,gBAAAnB,EAAA,CAAaoB,aAAA,KAAb,OAAAF,EAAA,GAA8BG,QAAA;EAAA;EAEhD3B,gBAAA,CAAiBuB,GAAA,EAAK,eAAgBK,KAAA,IAAU;IAC9C,IAAI,CAACX,QAAA,CAAS,KAAK,CAACK,OAAA,EAAS;IAC7B,MAAMO,MAAA,GAASD,KAAA,CAAMC,MAAA;IAErB,MAAMC,GAAA,GAAMT,QAAA,WAAAA,QAAA,GAAY,CAACD,GAAG;IAC5B,MAAMW,aAAA,GAAgBD,GAAA,CAAIE,IAAA,CAAMC,YAAA,IAAiB;MAC/C,MAAMC,EAAA,GAAKjC,WAAA,CAAYgC,YAAY,IAAIA,YAAA,CAAaR,OAAA,GAAUQ,YAAA;MAC9D,QAAOC,EAAA,oBAAAA,EAAA,CAAIC,QAAA,CAASN,MAAA,MAAWK,EAAA,KAAOL,MAAA;IACxC,CAAC;IAED,IAAIN,GAAA,CAAI,EAAEa,aAAA,KAAkBP,MAAA,IAAUE,aAAA,EAAe;MACnDH,KAAA,CAAMS,cAAA,CAAe;MACrBR,MAAA,CAAOS,KAAA,CAAM;IACf;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}