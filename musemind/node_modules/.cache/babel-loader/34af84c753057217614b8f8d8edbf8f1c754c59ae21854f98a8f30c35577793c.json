{"ast":null,"code":"'use client';\n\nimport { useAccordionItemContext, useAccordionStyles } from \"./chunk-RUEU7BLR.mjs\";\n\n// src/accordion-button.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionButton = forwardRef(function AccordionButton2(props, ref) {\n  const {\n    getButtonProps\n  } = useAccordionItemContext();\n  const buttonProps = getButtonProps(props, ref);\n  const styles = useAccordionStyles();\n  const buttonStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.button\n  };\n  return /* @__PURE__ */jsx(chakra.button, {\n    ...buttonProps,\n    className: cx(\"chakra-accordion__button\", props.className),\n    __css: buttonStyles\n  });\n});\nAccordionButton.displayName = \"AccordionButton\";\nexport { AccordionButton };","map":{"version":3,"names":["chakra","forwardRef","cx","jsx","AccordionButton","AccordionButton2","props","ref","getButtonProps","useAccordionItemContext","buttonProps","styles","useAccordionStyles","buttonStyles","display","alignItems","width","outline","button","className","__css","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\accordion\\src\\accordion-button.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  useAccordionItemContext,\n  useAccordionStyles,\n} from \"./accordion-context\"\n\nexport interface AccordionButtonProps extends HTMLChakraProps<\"button\"> {}\n\n/**\n * AccordionButton is used expands and collapses an accordion item.\n * It must be a child of `AccordionItem`.\n *\n * Note ðŸš¨: Each accordion button must be wrapped in a heading tag,\n * that is appropriate for the information architecture of the page.\n */\n\nexport const AccordionButton = forwardRef<AccordionButtonProps, \"button\">(\n  function AccordionButton(props, ref) {\n    const { getButtonProps } = useAccordionItemContext()\n    const buttonProps = getButtonProps(props, ref)\n\n    const styles = useAccordionStyles()\n    const buttonStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.button,\n    }\n\n    return (\n      <chakra.button\n        {...buttonProps}\n        className={cx(\"chakra-accordion__button\", props.className)}\n        __css={buttonStyles}\n      />\n    )\n  },\n)\n\nAccordionButton.displayName = \"AccordionButton\"\n"],"mappings":";;;;;AAAA,SACEA,MAAA,EACAC,UAAA,QAGK;AACP,SAASC,EAAA,QAAU;AA+Bb,SAAAC,GAAA;AAfC,IAAMC,eAAA,GAAkBH,UAAA,CAC7B,SAASI,iBAAgBC,KAAA,EAAOC,GAAA,EAAK;EACnC,MAAM;IAAEC;EAAe,IAAIC,uBAAA,CAAwB;EACnD,MAAMC,WAAA,GAAcF,cAAA,CAAeF,KAAA,EAAOC,GAAG;EAE7C,MAAMI,MAAA,GAASC,kBAAA,CAAmB;EAClC,MAAMC,YAAA,GAAkC;IACtCC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,KAAA,EAAO;IACPC,OAAA,EAAS;IACT,GAAGN,MAAA,CAAOO;EACZ;EAEA,OACE,eAAAf,GAAA,CAACH,MAAA,CAAOkB,MAAA,EAAP;IACE,GAAGR,WAAA;IACJS,SAAA,EAAWjB,EAAA,CAAG,4BAA4BI,KAAA,CAAMa,SAAS;IACzDC,KAAA,EAAOP;EAAA,CACT;AAEJ,CACF;AAEAT,eAAA,CAAgBiB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}