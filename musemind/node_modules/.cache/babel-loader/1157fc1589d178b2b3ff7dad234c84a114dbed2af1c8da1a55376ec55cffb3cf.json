{"ast":null,"code":"import { sizes_default } from \"./chunk-NJCYBKFH.mjs\";\nimport { runIfFn } from \"./chunk-UV3F75RF.mjs\";\n\n// src/components/avatar.ts\nimport { avatarAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from \"@chakra-ui/styled-system\";\nimport { isDark, randomColor } from \"@chakra-ui/theme-tools\";\nvar {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(parts.keys);\nvar $border = cssVar(\"avatar-border-color\");\nvar $bg = cssVar(\"avatar-bg\");\nvar $fs = cssVar(\"avatar-font-size\");\nvar $size = cssVar(\"avatar-size\");\nvar baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  borderColor: $border.reference,\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\"\n  }\n});\nvar baseStyleExcessLabel = defineStyle({\n  bg: $bg.reference,\n  fontSize: $fs.reference,\n  width: $size.reference,\n  height: $size.reference,\n  lineHeight: \"1\",\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\"\n  }\n});\nvar baseStyleContainer = defineStyle(props => {\n  const {\n    name,\n    theme\n  } = props;\n  const bg = name ? randomColor({\n    string: name\n  }) : \"colors.gray.400\";\n  const isBgDark = isDark(bg)(theme);\n  let color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  return {\n    bg: $bg.reference,\n    fontSize: $fs.reference,\n    color,\n    borderColor: $border.reference,\n    verticalAlign: \"top\",\n    width: $size.reference,\n    height: $size.reference,\n    \"&:not([data-loaded])\": {\n      [$bg.variable]: bg\n    },\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\"\n    }\n  };\n});\nvar baseStyleLabel = defineStyle({\n  fontSize: $fs.reference,\n  lineHeight: \"1\"\n});\nvar baseStyle = definePartsStyle(props => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props),\n  label: baseStyleLabel\n}));\nfunction getSize(size) {\n  const themeSize = size !== \"100%\" ? sizes_default[size] : void 0;\n  return definePartsStyle({\n    container: {\n      [$size.variable]: themeSize != null ? themeSize : size,\n      [$fs.variable]: `calc(${themeSize != null ? themeSize : size} / 2.5)`\n    },\n    excessLabel: {\n      [$size.variable]: themeSize != null ? themeSize : size,\n      [$fs.variable]: `calc(${themeSize != null ? themeSize : size} / 2.5)`\n    }\n  });\n}\nvar sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\")\n};\nvar avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\"\n  }\n});\nexport { avatarTheme };","map":{"version":3,"names":["avatarAnatomy","parts","createMultiStyleConfigHelpers","cssVar","defineStyle","isDark","randomColor","definePartsStyle","defineMultiStyleConfig","keys","$border","$bg","$fs","$size","baseStyleBadge","borderRadius","border","borderColor","reference","variable","_dark","baseStyleExcessLabel","bg","fontSize","width","height","lineHeight","baseStyleContainer","props","name","theme","string","isBgDark","color","verticalAlign","baseStyleLabel","baseStyle","badge","runIfFn","excessLabel","container","label","getSize","size","themeSize","sizes_default","sizes","xs","sm","md","lg","xl","full","avatarTheme","defaultProps"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\theme\\src\\components\\avatar.ts"],"sourcesContent":["import { avatarAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  cssVar,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { isDark, randomColor } from \"@chakra-ui/theme-tools\"\nimport themeSizes from \"../foundations/sizes\"\nimport { runIfFn } from \"../utils/run-if-fn\"\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $border = cssVar(\"avatar-border-color\")\nconst $bg = cssVar(\"avatar-bg\")\nconst $fs = cssVar(\"avatar-font-size\")\nconst $size = cssVar(\"avatar-size\")\n\nconst baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  borderColor: $border.reference,\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\",\n  },\n})\n\nconst baseStyleExcessLabel = defineStyle({\n  bg: $bg.reference,\n  fontSize: $fs.reference,\n  width: $size.reference,\n  height: $size.reference,\n  lineHeight: \"1\",\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\",\n  },\n})\n\nconst baseStyleContainer = defineStyle((props) => {\n  const { name, theme } = props\n  const bg = name ? randomColor({ string: name }) : \"colors.gray.400\"\n  const isBgDark = isDark(bg)(theme)\n\n  let color = \"white\"\n  if (!isBgDark) color = \"gray.800\"\n\n  return {\n    bg: $bg.reference,\n    fontSize: $fs.reference,\n    color,\n    borderColor: $border.reference,\n    verticalAlign: \"top\",\n    width: $size.reference,\n    height: $size.reference,\n    \"&:not([data-loaded])\": {\n      [$bg.variable]: bg,\n    },\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\",\n    },\n  }\n})\n\nconst baseStyleLabel = defineStyle({\n  fontSize: $fs.reference,\n  lineHeight: \"1\",\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props),\n  label: baseStyleLabel,\n}))\n\nfunction getSize(size: keyof typeof themeSizes | \"100%\") {\n  const themeSize = size !== \"100%\" ? themeSizes[size] : undefined\n  return definePartsStyle({\n    container: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`,\n    },\n    excessLabel: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`,\n    },\n  })\n}\n\nconst sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\"),\n}\n\nexport const avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}