{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-anchor.tsx\nimport { Children, cloneElement } from \"react\";\nfunction PopoverAnchor(props) {\n  const child = Children.only(props.children);\n  const {\n    getAnchorProps\n  } = usePopoverContext();\n  return cloneElement(child, getAnchorProps(child.props, child.ref));\n}\nPopoverAnchor.displayName = \"PopoverAnchor\";\nexport { PopoverAnchor };","map":{"version":3,"names":["Children","cloneElement","PopoverAnchor","props","child","only","children","getAnchorProps","usePopoverContext","ref","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\popover\\src\\popover-anchor.tsx"],"sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverAnchor is element that is used as the positioning reference\n * for the popover.\n */\n\nexport function PopoverAnchor(props: React.PropsWithChildren<{}>) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getAnchorProps } = usePopoverContext()\n\n  return cloneElement(child, getAnchorProps(child.props, child.ref))\n}\n\nPopoverAnchor.displayName = \"PopoverAnchor\"\n"],"mappings":";;;;;AAAA,SAASA,QAAA,EAAUC,YAAA,QAAoB;AAQhC,SAASC,cAAcC,KAAA,EAAoC;EAEhE,MAAMC,KAAA,GAAaJ,QAAA,CAASK,IAAA,CAAKF,KAAA,CAAMG,QAAQ;EAC/C,MAAM;IAAEC;EAAe,IAAIC,iBAAA,CAAkB;EAE7C,OAAOP,YAAA,CAAaG,KAAA,EAAOG,cAAA,CAAeH,KAAA,CAAMD,KAAA,EAAOC,KAAA,CAAMK,GAAG,CAAC;AACnE;AAEAP,aAAA,CAAcQ,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}