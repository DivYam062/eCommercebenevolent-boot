{"ast":null,"code":"'use client';\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\nexport { useButtonType };","map":{"version":3,"names":["useCallback","useState","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\button\\src\\use-button-type.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"],"mappings":";;;AAAA,SAASA,WAAA,EAAaC,QAAA,QAAgB;AAE/B,SAASC,cAAcC,KAAA,EAA2B;EACvD,MAAM,CAACC,QAAA,EAAUC,WAAW,IAAIJ,QAAA,CAAS,CAACE,KAAK;EAC/C,MAAMG,WAAA,GAAcN,WAAA,CAAaO,IAAA,IAA6B;IAC5D,IAAI,CAACA,IAAA,EAAM;IACXF,WAAA,CAAYE,IAAA,CAAKC,OAAA,KAAY,QAAQ;EACvC,GAAG,EAAE;EACL,MAAMC,IAAA,GAAOL,QAAA,GAAW,WAAW;EACnC,OAAO;IAAEM,GAAA,EAAKJ,WAAA;IAAaG;EAAK;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}