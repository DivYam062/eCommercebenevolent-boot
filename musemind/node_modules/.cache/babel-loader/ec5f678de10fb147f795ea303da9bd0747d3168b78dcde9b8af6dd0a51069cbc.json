{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useEventListener(target, event, handler, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !node) return;\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const node = typeof target === \"function\" ? target() : target != null ? target : document;\n    node == null ? void 0 : node.removeEventListener(event, listener, options);\n  };\n}\nexport { useEventListener };","map":{"version":3,"names":["useEffect","useCallbackRef","useEventListener","target","event","handler","options","listener","node","document","addEventListener","removeEventListener"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\react-use-event-listener\\src\\index.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\ntype Target = EventTarget | null | (() => EventTarget | null)\ntype Options = boolean | AddEventListenerOptions\n\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: DocumentEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof WindowEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: WindowEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  target: Target,\n  event: K,\n  handler?: (event: GlobalEventHandlersEventMap[K]) => void,\n  options?: Options,\n): VoidFunction\nexport function useEventListener(\n  target: Target,\n  event: string,\n  handler: ((event: Event) => void) | undefined,\n  options?: Options,\n) {\n  const listener = useCallbackRef(handler)\n\n  useEffect(() => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n\n    if (!handler || !node) return\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, target, options, listener, handler])\n\n  return () => {\n    const node = typeof target === \"function\" ? target() : target ?? document\n    node?.removeEventListener(event, listener, options)\n  }\n}\n"],"mappings":";;;AAAA,SAASA,SAAA,QAAiB;AAC1B,SAASC,cAAA,QAAsB;AAuBxB,SAASC,iBACdC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,OAAA,EACA;EACA,MAAMC,QAAA,GAAWN,cAAA,CAAeI,OAAO;EAEvCL,SAAA,CAAU,MAAM;IACd,MAAMQ,IAAA,GAAO,OAAOL,MAAA,KAAW,aAAaA,MAAA,CAAO,IAAIA,MAAA,WAAAA,MAAA,GAAUM,QAAA;IAEjE,IAAI,CAACJ,OAAA,IAAW,CAACG,IAAA,EAAM;IAEvBA,IAAA,CAAKE,gBAAA,CAAiBN,KAAA,EAAOG,QAAA,EAAUD,OAAO;IAC9C,OAAO,MAAM;MACXE,IAAA,CAAKG,mBAAA,CAAoBP,KAAA,EAAOG,QAAA,EAAUD,OAAO;IACnD;EACF,GAAG,CAACF,KAAA,EAAOD,MAAA,EAAQG,OAAA,EAASC,QAAA,EAAUF,OAAO,CAAC;EAE9C,OAAO,MAAM;IACX,MAAMG,IAAA,GAAO,OAAOL,MAAA,KAAW,aAAaA,MAAA,CAAO,IAAIA,MAAA,WAAAA,MAAA,GAAUM,QAAA;IACjED,IAAA,oBAAAA,IAAA,CAAMG,mBAAA,CAAoBP,KAAA,EAAOG,QAAA,EAAUD,OAAA;EAC7C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}