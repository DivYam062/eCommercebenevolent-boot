{"ast":null,"code":"// src/refs.ts\nimport { isFunction } from \"@chakra-ui/utils\";\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return node => {\n    refs.forEach(ref => assignRef(ref, node));\n  };\n}\nexport { assignRef, mergeRefs };","map":{"version":3,"names":["isFunction","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach"],"sources":["C:/Users/ASUS/OneDrive/Documents/Unit6_Cw/eCommercebenevolent-boot/musemind/node_modules/@chakra-ui/react-utils/dist/chunk-A3EAUGIL.mjs"],"sourcesContent":["// src/refs.ts\nimport { isFunction } from \"@chakra-ui/utils\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n\nexport {\n  assignRef,\n  mergeRefs\n};\n"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7B,IAAID,GAAG,IAAI,IAAI,EACb;EACF,IAAIF,UAAU,CAACE,GAAG,CAAC,EAAE;IACnBA,GAAG,CAACC,KAAK,CAAC;IACV;EACF;EACA,IAAI;IACFD,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,wBAAuBH,KAAM,aAAYD,GAAI,GAAE,CAAC;EACnE;AACF;AACA,SAASK,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,OAAQC,IAAI,IAAK;IACfD,IAAI,CAACE,OAAO,CAAER,GAAG,IAAKD,SAAS,CAACC,GAAG,EAAEO,IAAI,CAAC,CAAC;EAC7C,CAAC;AACH;AAEA,SACER,SAAS,EACTM,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}