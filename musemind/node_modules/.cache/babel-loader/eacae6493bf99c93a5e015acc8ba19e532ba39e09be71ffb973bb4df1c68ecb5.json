{"ast":null,"code":"'use client';\n\nimport { useUnmountEffect } from \"./chunk-NGVRPZ6W.mjs\";\n\n// src/use-force-update.ts\nimport { useCallback, useRef, useState } from \"react\";\nfunction useForceUpdate() {\n  const unloadingRef = useRef(false);\n  const [count, setCount] = useState(0);\n  useUnmountEffect(() => {\n    unloadingRef.current = true;\n  });\n  return useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}\nexport { useForceUpdate };","map":{"version":3,"names":["useCallback","useRef","useState","useForceUpdate","unloadingRef","count","setCount","useUnmountEffect","current"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-force-update.ts"],"sourcesContent":["import { useCallback, useRef, useState } from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = useRef(false)\n  const [count, setCount] = useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n"],"mappings":";;;;;AAAA,SAASA,WAAA,EAAaC,MAAA,EAAQC,QAAA,QAAgB;AAGvC,SAASC,eAAA,EAAiB;EAC/B,MAAMC,YAAA,GAAeH,MAAA,CAAO,KAAK;EACjC,MAAM,CAACI,KAAA,EAAOC,QAAQ,IAAIJ,QAAA,CAAS,CAAC;EAEpCK,gBAAA,CAAiB,MAAM;IACrBH,YAAA,CAAaI,OAAA,GAAU;EACzB,CAAC;EAED,OAAOR,WAAA,CAAY,MAAM;IACvB,IAAI,CAACI,YAAA,CAAaI,OAAA,EAAS;MACzBF,QAAA,CAASD,KAAA,GAAQ,CAAC;IACpB;EACF,GAAG,CAACA,KAAK,CAAC;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}