{"ast":null,"code":"'use client';\n\nimport { useCallbackRef } from \"./chunk-KA2477BY.mjs\";\n\n// src/use-event-listener.ts\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport { useEffect } from \"react\";\nfunction useEventListener(event, handler, env, options) {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    var _a;\n    const node = (_a = runIfFn(env)) != null ? _a : document;\n    if (!handler) {\n      return;\n    }\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, listener, handler]);\n  return () => {\n    var _a;\n    const node = (_a = runIfFn(env)) != null ? _a : document;\n    node.removeEventListener(event, listener, options);\n  };\n}\nexport { useEventListener };","map":{"version":3,"names":["runIfFn","useEffect","useEventListener","event","handler","env","options","listener","useCallbackRef","_a","node","document","addEventListener","removeEventListener"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\hooks\\src\\use-event-listener.ts"],"sourcesContent":["import { runIfFn } from \"@chakra-ui/utils\"\nimport { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\ntype DocumentOrElement = Document | HTMLElement | null\n\nexport type EventListenerEnv = (() => DocumentOrElement) | DocumentOrElement\n\n/**\n * React hook to manage browser event listeners\n *\n * @param event the event name\n * @param handler the event handler function to execute\n * @param env the dom environment to execute against (defaults to `document`)\n * @param options the event listener options\n *\n * @internal\n */\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  event: K | (string & {}),\n  handler?: (event: DocumentEventMap[K]) => void,\n  env?: EventListenerEnv,\n  options?: boolean | AddEventListenerOptions,\n) {\n  const listener = useCallbackRef(handler) as EventListener\n\n  useEffect(() => {\n    const node = runIfFn(env) ?? document\n\n    if (!handler) {\n      return\n    }\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, env, options, listener, handler])\n\n  return () => {\n    const node = runIfFn(env) ?? document\n    node.removeEventListener(event, listener, options)\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,OAAA,QAAe;AACxB,SAASC,SAAA,QAAiB;AAiBnB,SAASC,iBACdC,KAAA,EACAC,OAAA,EACAC,GAAA,EACAC,OAAA,EACA;EACA,MAAMC,QAAA,GAAWC,cAAA,CAAeJ,OAAO;EAEvCH,SAAA,CAAU,MAAM;IA1BlB,IAAAQ,EAAA;IA2BI,MAAMC,IAAA,IAAOD,EAAA,GAAAT,OAAA,CAAQK,GAAG,MAAX,OAAAI,EAAA,GAAgBE,QAAA;IAE7B,IAAI,CAACP,OAAA,EAAS;MACZ;IACF;IAEAM,IAAA,CAAKE,gBAAA,CAAiBT,KAAA,EAAOI,QAAA,EAAUD,OAAO;IAC9C,OAAO,MAAM;MACXI,IAAA,CAAKG,mBAAA,CAAoBV,KAAA,EAAOI,QAAA,EAAUD,OAAO;IACnD;EACF,GAAG,CAACH,KAAA,EAAOE,GAAA,EAAKC,OAAA,EAASC,QAAA,EAAUH,OAAO,CAAC;EAE3C,OAAO,MAAM;IAvCf,IAAAK,EAAA;IAwCI,MAAMC,IAAA,IAAOD,EAAA,GAAAT,OAAA,CAAQK,GAAG,MAAX,OAAAI,EAAA,GAAgBE,QAAA;IAC7BD,IAAA,CAAKG,mBAAA,CAAoBV,KAAA,EAAOI,QAAA,EAAUD,OAAO;EACnD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}