{"ast":null,"code":"'use client';\n\nimport { baseStyle } from \"./chunk-V7PAE35Z.mjs\";\n\n// src/avatar-group.tsx\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\n\n// ../../utilities/object-utils/src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0) delete clone[key];\n  }\n  return clone;\n}\n\n// src/avatar-group.tsx\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AvatarGroup = forwardRef(function AvatarGroup2(props, ref) {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max != null ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null ? validChildren.length - max : 0;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    var _a;\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_a = child.props.borderColor) != null ? _a : borderColor,\n      showBorder: true\n    };\n    return cloneElement(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    ...styles.group\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */jsxs(chakra.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: cx(\"chakra-avatar__group\", props.className),\n    children: [excess > 0 && /* @__PURE__ */jsx(chakra.span, {\n      className: \"chakra-avatar__excess\",\n      __css: excessStyles,\n      children: `+${excess}`\n    }), clones]\n  });\n});\nAvatarGroup.displayName = \"AvatarGroup\";\nexport { AvatarGroup };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","getValidChildren","compact","object","clone","Object","assign","key","cloneElement","jsx","jsxs","AvatarGroup","AvatarGroup2","props","ref","styles","children","borderColor","max","spacing","borderRadius","rest","validChildren","childrenWithinMax","slice","excess","length","reversedChildren","reverse","clones","map","child","index","_a","isFirstAvatar","childProps","marginEnd","size","showBorder","groupStyles","display","alignItems","justifyContent","flexDirection","group","excessStyles","marginStart","baseStyle","excessLabel","div","role","__css","className","span","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\avatar\\src\\avatar-group.tsx","C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\utilities\\object-utils\\src\\compact.ts"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { baseStyle } from \"./avatar\"\nimport { cloneElement } from \"react\"\n\ninterface AvatarGroupOptions {\n  /**\n   * The children of the avatar group.\n   *\n   * Ideally should be `Avatar` and `MoreIndicator` components\n   */\n  children: React.ReactNode\n  /**\n   * The space between the avatars in the group.\n   * @default \"-0.75rem\"\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number\n}\n\nexport interface AvatarGroupProps\n  extends AvatarGroupOptions,\n    Omit<HTMLChakraProps<\"div\">, \"children\">,\n    ThemingProps<\"Avatar\"> {}\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nexport const AvatarGroup = forwardRef<AvatarGroupProps, \"div\">(\n  function AvatarGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Avatar\", props)\n\n    const {\n      children,\n      borderColor,\n      max,\n      spacing = \"-0.75rem\",\n      borderRadius = \"full\",\n      ...rest\n    } = omitThemingProps(props)\n\n    const validChildren = getValidChildren(children)\n\n    /**\n     * get the avatars within the max\n     */\n    const childrenWithinMax =\n      max != null ? validChildren.slice(0, max) : validChildren\n\n    /**\n     * get the remaining avatar count\n     */\n    const excess = max != null ? validChildren.length - max : 0\n\n    /**\n     * Reversing the children is a great way to avoid using zIndex\n     * to overlap the avatars\n     */\n    const reversedChildren = childrenWithinMax.reverse()\n\n    const clones = reversedChildren.map((child, index) => {\n      const isFirstAvatar = index === 0\n\n      const childProps = {\n        marginEnd: isFirstAvatar ? 0 : spacing,\n        size: props.size,\n        borderColor: child.props.borderColor ?? borderColor,\n        showBorder: true,\n      }\n\n      return cloneElement(child, compact(childProps))\n    })\n\n    const groupStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"row-reverse\",\n      ...styles.group,\n    }\n\n    const excessStyles: SystemStyleObject = {\n      borderRadius,\n      marginStart: spacing,\n      ...baseStyle,\n      ...styles.excessLabel,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        role=\"group\"\n        __css={groupStyles}\n        {...rest}\n        className={cx(\"chakra-avatar__group\", props.className)}\n      >\n        {excess > 0 && (\n          <chakra.span className=\"chakra-avatar__excess\" __css={excessStyles}>\n            {`+${excess}`}\n          </chakra.span>\n        )}\n        {clones}\n      </chakra.div>\n    )\n  },\n)\n\nAvatarGroup.displayName = \"AvatarGroup\"\n","export function compact<T extends Record<any, any>>(object: T) {\n  const clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n"],"mappings":";;;;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAIAC,mBAAA,QAEK;AACP,SAASC,EAAA,QAAU;AACnB,SAASC,gBAAA,QAAwB;;;ACX1B,SAASC,QAAoCC,MAAA,EAAW;EAC7D,MAAMC,KAAA,GAAQC,MAAA,CAAOC,MAAA,CAAO,CAAC,GAAGH,MAAM;EACtC,SAASI,GAAA,IAAOH,KAAA,EAAO;IACrB,IAAIA,KAAA,CAAMG,GAAG,MAAM,QAAW,OAAOH,KAAA,CAAMG,GAAG;EAChD;EACA,OAAOH,KAAA;AACT;;;ADQA,SAASI,YAAA,QAAoB;AA0FvB,SAQIC,GAAA,EARJC,IAAA;AA7DC,IAAMC,WAAA,GAAcd,UAAA,CACzB,SAASe,aAAYC,KAAA,EAAOC,GAAA,EAAK;EAC/B,MAAMC,MAAA,GAAShB,mBAAA,CAAoB,UAAUc,KAAK;EAElD,MAAM;IACJG,QAAA;IACAC,WAAA;IACAC,GAAA;IACAC,OAAA,GAAU;IACVC,YAAA,GAAe;IACf,GAAGC;EACL,IAAIvB,gBAAA,CAAiBe,KAAK;EAE1B,MAAMS,aAAA,GAAgBrB,gBAAA,CAAiBe,QAAQ;EAK/C,MAAMO,iBAAA,GACJL,GAAA,IAAO,OAAOI,aAAA,CAAcE,KAAA,CAAM,GAAGN,GAAG,IAAII,aAAA;EAK9C,MAAMG,MAAA,GAASP,GAAA,IAAO,OAAOI,aAAA,CAAcI,MAAA,GAASR,GAAA,GAAM;EAM1D,MAAMS,gBAAA,GAAmBJ,iBAAA,CAAkBK,OAAA,CAAQ;EAEnD,MAAMC,MAAA,GAASF,gBAAA,CAAiBG,GAAA,CAAI,CAACC,KAAA,EAAOC,KAAA,KAAU;IA3E1D,IAAAC,EAAA;IA4EM,MAAMC,aAAA,GAAgBF,KAAA,KAAU;IAEhC,MAAMG,UAAA,GAAa;MACjBC,SAAA,EAAWF,aAAA,GAAgB,IAAIf,OAAA;MAC/BkB,IAAA,EAAMxB,KAAA,CAAMwB,IAAA;MACZpB,WAAA,GAAagB,EAAA,GAAAF,KAAA,CAAMlB,KAAA,CAAMI,WAAA,KAAZ,OAAAgB,EAAA,GAA2BhB,WAAA;MACxCqB,UAAA,EAAY;IACd;IAEA,OAAO9B,YAAA,CAAauB,KAAA,EAAO7B,OAAA,CAAQiC,UAAU,CAAC;EAChD,CAAC;EAED,MAAMI,WAAA,GAAiC;IACrCC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,cAAA,EAAgB;IAChBC,aAAA,EAAe;IACf,GAAG5B,MAAA,CAAO6B;EACZ;EAEA,MAAMC,YAAA,GAAkC;IACtCzB,YAAA;IACA0B,WAAA,EAAa3B,OAAA;IACb,GAAG4B,SAAA;IACH,GAAGhC,MAAA,CAAOiC;EACZ;EAEA,OACE,eAAAtC,IAAA,CAACd,MAAA,CAAOqD,GAAA,EAAP;IACCnC,GAAA;IACAoC,IAAA,EAAK;IACLC,KAAA,EAAOZ,WAAA;IACN,GAAGlB,IAAA;IACJ+B,SAAA,EAAWpD,EAAA,CAAG,wBAAwBa,KAAA,CAAMuC,SAAS;IAEpDpC,QAAA,GAAAS,MAAA,GAAS,KACR,eAAAhB,GAAA,CAACb,MAAA,CAAOyD,IAAA,EAAP;MAAYD,SAAA,EAAU;MAAwBD,KAAA,EAAON,YAAA;MACnD7B,QAAA,MAAIS,MAAA;IAAA,CACP,GAEDI,MAAA;EAAA,CACH;AAEJ,CACF;AAEAlB,WAAA,CAAY2C,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}