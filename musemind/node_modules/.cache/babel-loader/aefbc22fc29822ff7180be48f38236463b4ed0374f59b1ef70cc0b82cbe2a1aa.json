{"ast":null,"code":"'use client';\n\nimport { innerArrow, matchWidth, positionArrow, transformOrigin } from \"./chunk-P4KPSAOW.mjs\";\nimport { getPopperPlacement } from \"./chunk-AUJXXV3B.mjs\";\nimport { cssVars, getEventListenerOptions } from \"./chunk-6WT2JRWX.mjs\";\n\n// src/use-popper.ts\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction usePopper(props = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth: matchWidth2,\n    direction = \"ltr\"\n  } = props;\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const placement = getPopperPlacement(placementProp, direction);\n  const cleanup = useRef(() => {});\n  const setupPopper = useCallback(() => {\n    var _a;\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [innerArrow, positionArrow, transformOrigin, {\n        ...matchWidth,\n        enabled: !!matchWidth2\n      }, {\n        name: \"eventListeners\",\n        ...getEventListenerOptions(eventListeners)\n      }, {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary\n        }\n      },\n      // allow users override internal modifiers\n      ...(modifiers != null ? modifiers : [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth2, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  const referenceRef = useCallback(node => {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: mergeRefs(referenceRef, ref)\n  }), [referenceRef]);\n  const popperRef = useCallback(node => {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: mergeRefs(popperRef, ref),\n    style: {\n      ...props2.style,\n      position: strategy,\n      minWidth: matchWidth2 ? void 0 : \"max-content\",\n      inset: \"0 auto auto 0\"\n    }\n  }), [strategy, popperRef, matchWidth2]);\n  const getArrowProps = useCallback((props2 = {}, ref = null) => {\n    const {\n      size,\n      shadowColor,\n      bg,\n      style,\n      ...rest\n    } = props2;\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props2)\n    };\n  }, []);\n  const getArrowInnerProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-popper-arrow-inner\": \"\"\n  }), []);\n  return {\n    update() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps\n  };\n}\nfunction getArrowStyle(props) {\n  const {\n    size,\n    shadowColor,\n    bg,\n    style\n  } = props;\n  const computedStyle = {\n    ...style,\n    position: \"absolute\"\n  };\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n  return computedStyle;\n}\nexport { usePopper };","map":{"version":3,"names":["mergeRefs","createPopper","useCallback","useEffect","useRef","usePopper","props","enabled","modifiers","placement","placementProp","strategy","arrowPadding","eventListeners","offset","gutter","flip","boundary","preventOverflow","matchWidth","matchWidth2","direction","reference","popper","instance","getPopperPlacement","cleanup","setupPopper","_a","current","call","innerArrow","positionArrow","transformOrigin","name","getEventListenerOptions","options","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","props2","ref","popperRef","getPopperProps","style","position","minWidth","inset","getArrowProps","size","shadowColor","bg","rest","getArrowStyle","getArrowInnerProps","update","cssVars","varRef","computedStyle"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\popper\\src\\use-popper.ts"],"sourcesContent":["import { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of the popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it, so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        {\n          ...customModifiers.matchWidth,\n          enabled: !!matchWidth,\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  const getArrowProps: PropGetter = useCallback((props = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props),\n    }\n  }, [])\n\n  const getArrowInnerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}