{"ast":null,"code":"'use client';\n\n// src/tag.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(TagStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.span, {\n      ref,\n      ...ownProps,\n      __css: containerStyles\n    })\n  });\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    noOfLines: 1,\n    ...props,\n    __css: styles.label\n  });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginEnd: \"0.5rem\",\n  ...props\n}));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */jsx(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginStart: \"0.5rem\",\n  ...props\n}));\nTagRightIcon.displayName = \"TagRightIcon\";\nvar TagCloseIcon = props => /* @__PURE__ */jsx(Icon, {\n  verticalAlign: \"inherit\",\n  viewBox: \"0 0 512 512\",\n  ...props,\n  children: /* @__PURE__ */jsx(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  })\n});\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = forwardRef((props, ref) => {\n  const {\n    isDisabled,\n    children,\n    ...rest\n  } = props;\n  const styles = useTagStyles();\n  const btnStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    ...styles.closeButton\n  };\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    \"aria-label\": \"close\",\n    ...rest,\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles,\n    children: children || /* @__PURE__ */jsx(TagCloseIcon, {})\n  });\n});\nTagCloseButton.displayName = \"TagCloseButton\";\nexport { useTagStyles, Tag, TagLabel, TagLeftIcon, TagRightIcon, TagCloseButton };","map":{"version":3,"names":["Icon","createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","jsx","TagStylesProvider","useTagStyles","name","errorMessage","Tag","props","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","children","span","__css","displayName","TagLabel","noOfLines","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","rest","btnStyles","justifyContent","outline","closeButton","button","type","disabled"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\tag\\src\\tag.tsx"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [TagStylesProvider, useTagStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `,\n})\n\nexport { useTagStyles }\n\nexport interface TagProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Tag\"> {}\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props)\n  const ownProps = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container,\n  }\n\n  return (\n    <TagStylesProvider value={styles}>\n      <chakra.span ref={ref} {...ownProps} __css={containerStyles} />\n    </TagStylesProvider>\n  )\n})\n\nTag.displayName = \"Tag\"\n\nexport interface TagLabelProps extends HTMLChakraProps<\"span\"> {}\n\nexport const TagLabel = forwardRef<TagLabelProps, \"span\">((props, ref) => {\n  const styles = useTagStyles()\n  return <chakra.span ref={ref} noOfLines={1} {...props} __css={styles.label} />\n})\n\nTagLabel.displayName = \"TagLabel\"\n\nexport const TagLeftIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginEnd=\"0.5rem\" {...props} />\n))\n\nTagLeftIcon.displayName = \"TagLeftIcon\"\n\nexport const TagRightIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginStart=\"0.5rem\" {...props} />\n))\n\nTagRightIcon.displayName = \"TagRightIcon\"\n\nconst TagCloseIcon: React.FC<IconProps> = (props) => (\n  <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    />\n  </Icon>\n)\n\nTagCloseIcon.displayName = \"TagCloseIcon\"\n\nexport interface TagCloseButtonProps\n  extends Omit<HTMLChakraProps<\"button\">, \"disabled\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nexport const TagCloseButton = forwardRef<TagCloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props\n\n    const styles = useTagStyles()\n\n    const btnStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton,\n    }\n\n    return (\n      <chakra.button\n        ref={ref}\n        aria-label=\"close\"\n        {...rest}\n        type=\"button\"\n        disabled={isDisabled}\n        __css={btnStyles}\n      >\n        {children || <TagCloseIcon />}\n      </chakra.button>\n    )\n  },\n)\n\nTagCloseButton.displayName = \"TagCloseButton\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}