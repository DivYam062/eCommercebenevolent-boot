{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { createContext as createReactContext, useContext as useReactContext } from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue\n  } = options;\n  const Context = createReactContext(defaultValue);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(errorMessage != null ? errorMessage : getErrorMessage(hookName, providerName));\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport { createContext };","map":{"version":3,"names":["createContext","createReactContext","useContext","useReactContext","getErrorMessage","hook","provider","options","name","strict","hookName","providerName","errorMessage","defaultValue","Context","displayName","_a","context","error","Error","captureStackTrace","call","Provider"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\react-context\\src\\index.ts"],"sourcesContent":["import {\n  createContext as createReactContext,\n  useContext as useReactContext,\n} from \"react\"\n\nexport interface CreateContextOptions<T> {\n  strict?: boolean\n  hookName?: string\n  providerName?: string\n  errorMessage?: string\n  name?: string\n  defaultValue?: T\n}\n\nexport type CreateContextReturn<T> = [\n  React.Provider<T>,\n  () => T,\n  React.Context<T>,\n]\n\nfunction getErrorMessage(hook: string, provider: string) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`\n}\n\nexport function createContext<T>(options: CreateContextOptions<T> = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue,\n  } = options\n\n  const Context = createReactContext<T | undefined>(defaultValue)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = useReactContext(Context)\n\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage ?? getErrorMessage(hookName, providerName),\n      )\n      error.name = \"ContextError\"\n      Error.captureStackTrace?.(error, useContext)\n      throw error\n    }\n\n    return context\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<T>\n}\n"],"mappings":";;;AAAA,SACEA,aAAA,IAAiBC,kBAAA,EACjBC,UAAA,IAAcC,eAAA,QACT;AAiBP,SAASC,gBAAgBC,IAAA,EAAcC,QAAA,EAAkB;EACvD,OAAO,GAAGD,IAAA,sEAA0EC,QAAA;AACtF;AAEO,SAASN,cAAiBO,OAAA,GAAmC,CAAC,GAAG;EACtE,MAAM;IACJC,IAAA;IACAC,MAAA,GAAS;IACTC,QAAA,GAAW;IACXC,YAAA,GAAe;IACfC,YAAA;IACAC;EACF,IAAIN,OAAA;EAEJ,MAAMO,OAAA,GAAUb,kBAAA,CAAkCY,YAAY;EAE9DC,OAAA,CAAQC,WAAA,GAAcP,IAAA;EAEtB,SAASN,WAAA,EAAa;IAtCxB,IAAAc,EAAA;IAuCI,MAAMC,OAAA,GAAUd,eAAA,CAAgBW,OAAO;IAEvC,IAAI,CAACG,OAAA,IAAWR,MAAA,EAAQ;MACtB,MAAMS,KAAA,GAAQ,IAAIC,KAAA,CAChBP,YAAA,WAAAA,YAAA,GAAgBR,eAAA,CAAgBM,QAAA,EAAUC,YAAY,CACxD;MACAO,KAAA,CAAMV,IAAA,GAAO;MACb,CAAAQ,EAAA,GAAAG,KAAA,CAAMC,iBAAA,KAAN,gBAAAJ,EAAA,CAAAK,IAAA,CAAAF,KAAA,EAA0BD,KAAA,EAAOhB,UAAA;MACjC,MAAMgB,KAAA;IACR;IAEA,OAAOD,OAAA;EACT;EAEA,OAAO,CAACH,OAAA,CAAQQ,QAAA,EAAUpB,UAAA,EAAYY,OAAO;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}