{"ast":null,"code":"'use client';\n\n// src/skip-nav.tsx\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar fallbackId = \"chakra-skip-nav\";\nfunction getStyles(styles) {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"]\n    }\n  };\n}\nvar SkipNavLink = forwardRef(function SkipNavLink2(props, ref) {\n  const styles = useStyleConfig(\"SkipLink\", props);\n  const {\n    id = fallbackId,\n    ...rest\n  } = omitThemingProps(props);\n  return /* @__PURE__ */jsx(chakra.a, {\n    ...rest,\n    ref,\n    href: `#${id}`,\n    __css: getStyles(styles)\n  });\n});\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = forwardRef(function SkipNavContent2(props, ref) {\n  const {\n    id = fallbackId,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    id,\n    tabIndex: -1,\n    style: {\n      outline: 0\n    },\n    ...rest\n  });\n});\nSkipNavContent.displayName = \"SkipNavContent\";\nexport { SkipNavLink, SkipNavContent };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","jsx","fallbackId","getStyles","styles","userSelect","border","height","width","margin","padding","outline","overflow","position","clip","_focus","SkipNavLink","SkipNavLink2","props","ref","id","rest","a","href","__css","displayName","SkipNavContent","SkipNavContent2","div","tabIndex","style"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\skip-nav\\src\\skip-nav.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface SkipNavLinkProps\n  extends HTMLChakraProps<\"a\">,\n    ThemingProps<\"SkipNavLink\"> {}\n\nconst fallbackId = \"chakra-skip-nav\"\n\nfunction getStyles(styles: any): SystemStyleObject {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"],\n    },\n  }\n}\n\n/**\n * Renders a link that remains hidden until focused to skip to the main content.\n *\n * @see Docs https://chakra-ui.com/docs/components/skip-nav\n */\nexport const SkipNavLink = forwardRef<SkipNavLinkProps, \"a\">(\n  function SkipNavLink(props, ref) {\n    const styles = useStyleConfig(\"SkipLink\", props)\n    const { id = fallbackId, ...rest } = omitThemingProps(props)\n    return (\n      <chakra.a {...rest} ref={ref} href={`#${id}`} __css={getStyles(styles)} />\n    )\n  },\n)\n\nSkipNavLink.displayName = \"SkipNavLink\"\n\nexport interface SkipNavContentProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Renders a div as the target for the `SkipNavLink`.\n *\n * @see Docs https://chakra-ui.com/docs/components/skip-nav\n */\nexport const SkipNavContent = forwardRef<SkipNavContentProps, \"div\">(\n  function SkipNavContent(props, ref) {\n    const { id = fallbackId, ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        id={id}\n        tabIndex={-1}\n        style={{ outline: 0 }}\n        {...rest}\n      />\n    )\n  },\n)\n\nSkipNavContent.displayName = \"SkipNavContent\"\n"],"mappings":";;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAGAC,cAAA,QAEK;AAwCD,SAAAC,GAAA;AAlCN,IAAMC,UAAA,GAAa;AAEnB,SAASC,UAAUC,MAAA,EAAgC;EACjD,OAAO;IACLC,UAAA,EAAY;IACZC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,QAAA,EAAU;IACVC,QAAA,EAAU;IACVC,IAAA,EAAM;IACN,GAAGV,MAAA;IACHW,MAAA,EAAQ;MACND,IAAA,EAAM;MACNN,KAAA,EAAO;MACPD,MAAA,EAAQ;MACR,GAAGH,MAAA,CAAO,QAAQ;IACpB;EACF;AACF;AAOO,IAAMY,WAAA,GAAclB,UAAA,CACzB,SAASmB,aAAYC,KAAA,EAAOC,GAAA,EAAK;EAC/B,MAAMf,MAAA,GAASJ,cAAA,CAAe,YAAYkB,KAAK;EAC/C,MAAM;IAAEE,EAAA,GAAKlB,UAAA;IAAY,GAAGmB;EAAK,IAAItB,gBAAA,CAAiBmB,KAAK;EAC3D,OACE,eAAAjB,GAAA,CAACJ,MAAA,CAAOyB,CAAA,EAAP;IAAU,GAAGD,IAAA;IAAMF,GAAA;IAAUI,IAAA,EAAM,IAAIH,EAAA;IAAMI,KAAA,EAAOrB,SAAA,CAAUC,MAAM;EAAA,CAAG;AAE5E,CACF;AAEAY,WAAA,CAAYS,WAAA,GAAc;AASnB,IAAMC,cAAA,GAAiB5B,UAAA,CAC5B,SAAS6B,gBAAeT,KAAA,EAAOC,GAAA,EAAK;EAClC,MAAM;IAAEC,EAAA,GAAKlB,UAAA;IAAY,GAAGmB;EAAK,IAAIH,KAAA;EACrC,OACE,eAAAjB,GAAA,CAACJ,MAAA,CAAO+B,GAAA,EAAP;IACCT,GAAA;IACAC,EAAA;IACAS,QAAA,EAAU;IACVC,KAAA,EAAO;MAAEnB,OAAA,EAAS;IAAE;IACnB,GAAGU;EAAA,CACN;AAEJ,CACF;AAEAK,cAAA,CAAeD,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}