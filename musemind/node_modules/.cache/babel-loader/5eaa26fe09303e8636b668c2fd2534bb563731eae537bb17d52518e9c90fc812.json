{"ast":null,"code":"'use client';\n\nimport { getToastStyle } from \"./chunk-LDADOVIM.mjs\";\n\n// src/toast.component.tsx\nimport { useTimeout } from \"@chakra-ui/react-use-timeout\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { motion, useIsPresent } from \"framer-motion\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { memo, useEffect, useMemo, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar toastMotionVariants = {\n  initial: props => {\n    const {\n      position\n    } = props;\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nvar ToastComponent = memo(props => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5e3,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\"\n  } = props;\n  const [delay, setDelay] = useState(duration);\n  const isPresent = useIsPresent();\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  useUpdateEffect(() => {\n    setDelay(duration);\n  }, [duration]);\n  const onMouseEnter = () => setDelay(null);\n  const onMouseLeave = () => setDelay(duration);\n  const close = () => {\n    if (isPresent) onRequestRemove();\n  };\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  useTimeout(close, delay);\n  const containerStyles = useMemo(() => ({\n    pointerEvents: \"auto\",\n    maxWidth: 560,\n    minWidth: 300,\n    margin: toastSpacing,\n    ...containerStyle\n  }), [containerStyle, toastSpacing]);\n  const toastStyle = useMemo(() => getToastStyle(position), [position]);\n  return /* @__PURE__ */jsx(motion.div, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: motionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: toastStyle,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      role: \"status\",\n      \"aria-atomic\": \"true\",\n      className: \"chakra-toast__inner\",\n      __css: containerStyles,\n      children: runIfFn(message, {\n        id,\n        onClose: close\n      })\n    })\n  });\n});\nToastComponent.displayName = \"ToastComponent\";\nexport { ToastComponent };","map":{"version":3,"names":["useTimeout","useUpdateEffect","runIfFn","motion","useIsPresent","chakra","memo","useEffect","useMemo","useState","jsx","toastMotionVariants","initial","props","position","dir","includes","factor","opacity","animate","y","x","scale","transition","duration","ease","exit","ToastComponent","id","message","onCloseComplete","onRequestRemove","requestClose","containerStyle","motionVariants","toastSpacing","delay","setDelay","isPresent","onMouseEnter","onMouseLeave","close","containerStyles","pointerEvents","maxWidth","minWidth","margin","toastStyle","getToastStyle","div","layout","className","variants","onHoverStart","onHoverEnd","custom","style","children","role","__css","onClose","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\toast\\src\\toast.component.tsx"],"sourcesContent":["import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n"],"mappings":";;;;;AAAA,SAASA,UAAA,QAAkB;AAC3B,SAASC,eAAA,QAAuB;AAChC,SAASC,OAAA,QAAe;AACxB,SAASC,MAAA,EAAQC,YAAA,QAA8B;AAC/C,SAASC,MAAA,QAAc;AAIvB,SAASC,IAAA,EAAMC,SAAA,EAAWC,OAAA,EAASC,QAAA,QAAgB;AA4G7C,SAAAC,GAAA;AA1GN,IAAMC,mBAAA,GAAgC;EACpCC,OAAA,EAAUC,KAAA,IAAU;IAClB,MAAM;MAAEC;IAAS,IAAID,KAAA;IAErB,MAAME,GAAA,GAAM,CAAC,OAAO,QAAQ,EAAEC,QAAA,CAASF,QAAQ,IAAI,MAAM;IAEzD,IAAIG,MAAA,GAAS,CAAC,aAAa,cAAc,EAAED,QAAA,CAASF,QAAQ,IAAI,IAAI;IACpE,IAAIA,QAAA,KAAa,UAAUG,MAAA,GAAS;IAEpC,OAAO;MACLC,OAAA,EAAS;MACT,CAACH,GAAG,GAAGE,MAAA,GAAS;IAClB;EACF;EACAE,OAAA,EAAS;IACPD,OAAA,EAAS;IACTE,CAAA,EAAG;IACHC,CAAA,EAAG;IACHC,KAAA,EAAO;IACPC,UAAA,EAAY;MACVC,QAAA,EAAU;MACVC,IAAA,EAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB;EACF;EACAC,IAAA,EAAM;IACJR,OAAA,EAAS;IACTI,KAAA,EAAO;IACPC,UAAA,EAAY;MACVC,QAAA,EAAU;MACVC,IAAA,EAAM,CAAC,KAAK,GAAG,GAAG,CAAC;IACrB;EACF;AACF;AAMO,IAAME,cAAA,GAAiBrB,IAAA,CAAMO,KAAA,IAA+B;EACjE,MAAM;IACJe,EAAA;IACAC,OAAA;IACAC,eAAA;IACAC,eAAA;IACAC,YAAA,GAAe;IACflB,QAAA,GAAW;IACXU,QAAA,GAAW;IACXS,cAAA;IACAC,cAAA,GAAiBvB,mBAAA;IACjBwB,YAAA,GAAe;EACjB,IAAItB,KAAA;EAEJ,MAAM,CAACuB,KAAA,EAAOC,QAAQ,IAAI5B,QAAA,CAASe,QAAQ;EAC3C,MAAMc,SAAA,GAAYlC,YAAA,CAAa;EAE/BH,eAAA,CAAgB,MAAM;IACpB,IAAI,CAACqC,SAAA,EAAW;MACdR,eAAA,oBAAAA,eAAA;IACF;EACF,GAAG,CAACQ,SAAS,CAAC;EAEdrC,eAAA,CAAgB,MAAM;IACpBoC,QAAA,CAASb,QAAQ;EACnB,GAAG,CAACA,QAAQ,CAAC;EAEb,MAAMe,YAAA,GAAeA,CAAA,KAAMF,QAAA,CAAS,IAAI;EACxC,MAAMG,YAAA,GAAeA,CAAA,KAAMH,QAAA,CAASb,QAAQ;EAE5C,MAAMiB,KAAA,GAAQA,CAAA,KAAM;IAClB,IAAIH,SAAA,EAAWP,eAAA,CAAgB;EACjC;EAEAxB,SAAA,CAAU,MAAM;IACd,IAAI+B,SAAA,IAAaN,YAAA,EAAc;MAC7BD,eAAA,CAAgB;IAClB;EACF,GAAG,CAACO,SAAA,EAAWN,YAAA,EAAcD,eAAe,CAAC;EAE7C/B,UAAA,CAAWyC,KAAA,EAAOL,KAAK;EAEvB,MAAMM,eAAA,GAAkBlC,OAAA,CACtB,OAAO;IACLmC,aAAA,EAAe;IACfC,QAAA,EAAU;IACVC,QAAA,EAAU;IACVC,MAAA,EAAQX,YAAA;IACR,GAAGF;EACL,IACA,CAACA,cAAA,EAAgBE,YAAY,CAC/B;EAEA,MAAMY,UAAA,GAAavC,OAAA,CAAQ,MAAMwC,aAAA,CAAclC,QAAQ,GAAG,CAACA,QAAQ,CAAC;EAEpE,OACE,eAAAJ,GAAA,CAACP,MAAA,CAAO8C,GAAA,EAAP;IACCC,MAAA,EAAM;IACNC,SAAA,EAAU;IACVC,QAAA,EAAUlB,cAAA;IACVtB,OAAA,EAAQ;IACRO,OAAA,EAAQ;IACRO,IAAA,EAAK;IACL2B,YAAA,EAAcd,YAAA;IACde,UAAA,EAAYd,YAAA;IACZe,MAAA,EAAQ;MAAEzC;IAAS;IACnB0C,KAAA,EAAOT,UAAA;IAEPU,QAAA,iBAAA/C,GAAA,CAACL,MAAA,CAAO4C,GAAA,EAAP;MACCS,IAAA,EAAK;MACL,eAAY;MACZP,SAAA,EAAU;MACVQ,KAAA,EAAOjB,eAAA;MAENe,QAAA,EAAAvD,OAAA,CAAQ2B,OAAA,EAAS;QAAED,EAAA;QAAIgC,OAAA,EAASnB;MAAM,CAAC;IAAA,CAC1C;EAAA,CACF;AAEJ,CAAC;AAEDd,cAAA,CAAekC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}