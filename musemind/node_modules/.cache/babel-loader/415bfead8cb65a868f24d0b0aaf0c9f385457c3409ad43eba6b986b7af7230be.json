{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalBody = forwardRef((props, ref) => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const {\n    bodyId,\n    setBodyMounted\n  } = useModalContext();\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => setBodyMounted(false);\n  }, [setBodyMounted]);\n  const _className = cx(\"chakra-modal__body\", className);\n  const styles = useModalStyles();\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    className: _className,\n    id: bodyId,\n    ...rest,\n    __css: styles.body\n  });\n});\nModalBody.displayName = \"ModalBody\";\nexport { ModalBody };","map":{"version":3,"names":["cx","chakra","forwardRef","useEffect","jsx","ModalBody","props","ref","className","rest","bodyId","setBodyMounted","useModalContext","_className","styles","useModalStyles","div","id","__css","body","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\modal\\src\\modal-body.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useEffect } from \"react\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport interface ModalBodyProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * ModalBody\n *\n * React component that houses the main content of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalBody = forwardRef<ModalBodyProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n  const { bodyId, setBodyMounted } = useModalContext()\n\n  /**\n   * Notify us if this component was rendered or used,\n   * so we can append `aria-describedby` automatically\n   */\n  useEffect(() => {\n    setBodyMounted(true)\n    return () => setBodyMounted(false)\n  }, [setBodyMounted])\n\n  const _className = cx(\"chakra-modal__body\", className)\n  const styles = useModalStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={_className}\n      id={bodyId}\n      {...rest}\n      __css={styles.body}\n    />\n  )\n})\n\nModalBody.displayName = \"ModalBody\"\n"],"mappings":";;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAA0BC,MAAA,EAAQC,UAAA,QAAkB;AACpD,SAASC,SAAA,QAAiB;AA8BtB,SAAAC,GAAA;AAjBG,IAAMC,SAAA,GAAYH,UAAA,CAAkC,CAACI,KAAA,EAAOC,GAAA,KAAQ;EACzE,MAAM;IAAEC,SAAA;IAAW,GAAGC;EAAK,IAAIH,KAAA;EAC/B,MAAM;IAAEI,MAAA;IAAQC;EAAe,IAAIC,eAAA,CAAgB;EAMnDT,SAAA,CAAU,MAAM;IACdQ,cAAA,CAAe,IAAI;IACnB,OAAO,MAAMA,cAAA,CAAe,KAAK;EACnC,GAAG,CAACA,cAAc,CAAC;EAEnB,MAAME,UAAA,GAAab,EAAA,CAAG,sBAAsBQ,SAAS;EACrD,MAAMM,MAAA,GAASC,cAAA,CAAe;EAE9B,OACE,eAAAX,GAAA,CAACH,MAAA,CAAOe,GAAA,EAAP;IACCT,GAAA;IACAC,SAAA,EAAWK,UAAA;IACXI,EAAA,EAAIP,MAAA;IACH,GAAGD,IAAA;IACJS,KAAA,EAAOJ,MAAA,CAAOK;EAAA,CAChB;AAEJ,CAAC;AAEDd,SAAA,CAAUe,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}