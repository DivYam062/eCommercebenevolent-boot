{"ast":null,"code":"'use client';\n\nimport { TabsDescendantsProvider, TabsProvider, useTabs } from \"./chunk-NXSBASJ3.mjs\";\n\n// src/tabs.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TabsStylesProvider, useTabsStyles] = createContext({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `\n});\nvar Tabs = forwardRef(function Tabs2(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props);\n  const {\n    children,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const {\n    htmlProps,\n    descendants,\n    ...ctx\n  } = useTabs(rest);\n  const context = useMemo(() => ctx, [ctx]);\n  const {\n    isFitted: _,\n    ...rootProps\n  } = htmlProps;\n  const tabsStyles = {\n    position: \"relative\",\n    ...styles.root\n  };\n  return /* @__PURE__ */jsx(TabsDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(TabsProvider, {\n      value: context,\n      children: /* @__PURE__ */jsx(TabsStylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(chakra.div, {\n          className: cx(\"chakra-tabs\", className),\n          ref,\n          ...rootProps,\n          __css: tabsStyles,\n          children\n        })\n      })\n    })\n  });\n});\nTabs.displayName = \"Tabs\";\nexport { useTabsStyles, Tabs };","map":{"version":3,"names":["createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","useMemo","jsx","TabsStylesProvider","useTabsStyles","name","errorMessage","Tabs","Tabs2","props","ref","styles","children","className","rest","htmlProps","descendants","ctx","useTabs","context","isFitted","_","rootProps","tabsStyles","position","root","TabsDescendantsProvider","value","TabsProvider","div","__css","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\tabs\\src\\tabs.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\nconst [TabsStylesProvider, useTabsStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `,\n})\n\nexport { useTabsStyles }\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps<\"Tabs\">,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n *\n * @see Docs https://chakra-ui.com/docs/components/tabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">(function Tabs(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...ctx } = useTabs(rest)\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isFitted: _, ...rootProps } = htmlProps as any\n\n  const tabsStyles: SystemStyleObject = {\n    position: \"relative\",\n    ...styles.root,\n  }\n\n  return (\n    <TabsDescendantsProvider value={descendants}>\n      <TabsProvider value={context}>\n        <TabsStylesProvider value={styles}>\n          <chakra.div\n            className={cx(\"chakra-tabs\", className)}\n            ref={ref}\n            {...rootProps}\n            __css={tabsStyles}\n          >\n            {children}\n          </chakra.div>\n        </TabsStylesProvider>\n      </TabsProvider>\n    </TabsDescendantsProvider>\n  )\n})\n\nTabs.displayName = \"Tabs\"\n"],"mappings":";;;;;AAAA,SAASA,aAAA,QAAqB;AAC9B,SACEC,MAAA,EACAC,UAAA,EACAC,gBAAA,EAGAC,mBAAA,QAEK;AACP,SAASC,EAAA,QAAU;AACnB,SAASC,OAAA,QAAe;AA+Dd,SAAAC,GAAA;AAvDV,IAAM,CAACC,kBAAA,EAAoBC,aAAa,IAAIT,aAAA,CAE1C;EACAU,IAAA,EAAM;EACNC,YAAA,EAAc;AAChB,CAAC;AAgCM,IAAMC,IAAA,GAAOV,UAAA,CAA6B,SAASW,MAAKC,KAAA,EAAOC,GAAA,EAAK;EACzE,MAAMC,MAAA,GAASZ,mBAAA,CAAoB,QAAQU,KAAK;EAChD,MAAM;IAAEG,QAAA;IAAUC,SAAA;IAAW,GAAGC;EAAK,IAAIhB,gBAAA,CAAiBW,KAAK;EAE/D,MAAM;IAAEM,SAAA;IAAWC,WAAA;IAAa,GAAGC;EAAI,IAAIC,OAAA,CAAQJ,IAAI;EACvD,MAAMK,OAAA,GAAUlB,OAAA,CAAQ,MAAMgB,GAAA,EAAK,CAACA,GAAG,CAAC;EAExC,MAAM;IAAEG,QAAA,EAAUC,CAAA;IAAG,GAAGC;EAAU,IAAIP,SAAA;EAEtC,MAAMQ,UAAA,GAAgC;IACpCC,QAAA,EAAU;IACV,GAAGb,MAAA,CAAOc;EACZ;EAEA,OACE,eAAAvB,GAAA,CAACwB,uBAAA;IAAwBC,KAAA,EAAOX,WAAA;IAC9BJ,QAAA,iBAAAV,GAAA,CAAC0B,YAAA;MAAaD,KAAA,EAAOR,OAAA;MACnBP,QAAA,iBAAAV,GAAA,CAACC,kBAAA;QAAmBwB,KAAA,EAAOhB,MAAA;QACzBC,QAAA,iBAAAV,GAAA,CAACN,MAAA,CAAOiC,GAAA,EAAP;UACChB,SAAA,EAAWb,EAAA,CAAG,eAAea,SAAS;UACtCH,GAAA;UACC,GAAGY,SAAA;UACJQ,KAAA,EAAOP,UAAA;UAENX;QAAA,CACH;MAAA,CACF;IAAA,CACF;EAAA,CACF;AAEJ,CAAC;AAEDL,IAAA,CAAKwB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}