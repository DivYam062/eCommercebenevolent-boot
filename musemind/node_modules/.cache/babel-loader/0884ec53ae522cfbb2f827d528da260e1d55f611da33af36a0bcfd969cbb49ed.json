{"ast":null,"code":"'use client';\n\nimport { useRangeSlider } from \"./chunk-K3MZ7A5P.mjs\";\nimport { cx } from \"./chunk-DX64QB22.mjs\";\n\n// src/range-slider.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig, useTheme } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar [RangeSliderProvider, useRangeSliderContext] = createContext({\n  name: \"SliderContext\",\n  errorMessage: \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\"\n});\nvar [RangeSliderStylesProvider, useRangeSliderStyles] = createContext({\n  name: `RangeSliderStylesContext`,\n  errorMessage: `useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `\n});\nvar RangeSlider = forwardRef(function RangeSlider2(props, ref) {\n  const sliderProps = {\n    orientation: \"horizontal\",\n    ...props\n  };\n  const styles = useMultiStyleConfig(\"Slider\", sliderProps);\n  const ownProps = omitThemingProps(sliderProps);\n  const {\n    direction\n  } = useTheme();\n  ownProps.direction = direction;\n  const {\n    getRootProps,\n    ...context\n  } = useRangeSlider(ownProps);\n  const ctx = useMemo(() => ({\n    ...context,\n    name: sliderProps.name\n  }), [context, sliderProps.name]);\n  return /* @__PURE__ */jsx(RangeSliderProvider, {\n    value: ctx,\n    children: /* @__PURE__ */jsx(RangeSliderStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        ...getRootProps({}, ref),\n        className: \"chakra-slider\",\n        __css: styles.container,\n        children: sliderProps.children\n      })\n    })\n  });\n});\nRangeSlider.displayName = \"RangeSlider\";\nvar RangeSliderThumb = forwardRef(function RangeSliderThumb2(props, ref) {\n  const {\n    getThumbProps,\n    getInputProps,\n    name\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */jsxs(chakra.div, {\n    ...thumbProps,\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb,\n    children: [thumbProps.children, name && /* @__PURE__ */jsx(\"input\", {\n      ...getInputProps({\n        index: props.index\n      })\n    })]\n  });\n});\nRangeSliderThumb.displayName = \"RangeSliderThumb\";\nvar RangeSliderTrack = forwardRef(function RangeSliderTrack2(props, ref) {\n  const {\n    getTrackProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...trackProps,\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track,\n    \"data-testid\": \"chakra-range-slider-track\"\n  });\n});\nRangeSliderTrack.displayName = \"RangeSliderTrack\";\nvar RangeSliderFilledTrack = forwardRef(function RangeSliderFilledTrack2(props, ref) {\n  const {\n    getInnerTrackProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...trackProps,\n    className: \"chakra-slider__filled-track\",\n    __css: styles.filledTrack\n  });\n});\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\";\nvar RangeSliderMark = forwardRef(function RangeSliderMark2(props, ref) {\n  const {\n    getMarkerProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...markProps,\n    className: cx(\"chakra-slider__marker\", props.className),\n    __css: styles.mark\n  });\n});\nRangeSliderMark.displayName = \"RangeSliderMark\";\nexport { RangeSliderProvider, useRangeSliderContext, useRangeSliderStyles, RangeSlider, RangeSliderThumb, RangeSliderTrack, RangeSliderFilledTrack, RangeSliderMark };","map":{"version":3,"names":["createContext","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","useTheme","useMemo","jsx","jsxs","RangeSliderProvider","useRangeSliderContext","name","errorMessage","RangeSliderStylesProvider","useRangeSliderStyles","RangeSlider","RangeSlider2","props","ref","sliderProps","orientation","styles","ownProps","direction","getRootProps","context","useRangeSlider","ctx","value","children","div","className","__css","container","displayName","RangeSliderThumb","RangeSliderThumb2","getThumbProps","getInputProps","thumbProps","cx","thumb","index","RangeSliderTrack","RangeSliderTrack2","getTrackProps","trackProps","track","RangeSliderFilledTrack","RangeSliderFilledTrack2","getInnerTrackProps","filledTrack","RangeSliderMark","RangeSliderMark2","getMarkerProps","markProps","mark"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\slider\\src\\range-slider.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { useMemo } from \"react\"\nimport {\n  useRangeSlider,\n  UseRangeSliderProps,\n  UseRangeSliderReturn,\n} from \"./use-range-slider\"\n\ninterface RangeSliderContext\n  extends Omit<UseRangeSliderReturn, \"getRootProps\"> {\n  name?: string | string[]\n}\n\nconst [RangeSliderProvider, useRangeSliderContext] =\n  createContext<RangeSliderContext>({\n    name: \"SliderContext\",\n    errorMessage:\n      \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\",\n  })\n\nconst [RangeSliderStylesProvider, useRangeSliderStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `RangeSliderStylesContext`,\n  errorMessage: `useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `,\n})\n\nexport { useRangeSliderStyles }\n\nexport { RangeSliderProvider, useRangeSliderContext }\n\nexport interface RangeSliderProps\n  extends UseRangeSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseRangeSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport const RangeSlider = forwardRef<RangeSliderProps, \"div\">(\n  function RangeSlider(props, ref) {\n    const sliderProps: RangeSliderProps = {\n      orientation: \"horizontal\",\n      ...props,\n    }\n\n    const styles = useMultiStyleConfig(\"Slider\", sliderProps)\n    const ownProps = omitThemingProps(sliderProps)\n\n    const { direction } = useTheme()\n    ownProps.direction = direction\n\n    const { getRootProps, ...context } = useRangeSlider(ownProps)\n    const ctx = useMemo(\n      () => ({ ...context, name: sliderProps.name }),\n      [context, sliderProps.name],\n    )\n\n    return (\n      <RangeSliderProvider value={ctx}>\n        <RangeSliderStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className=\"chakra-slider\"\n            __css={styles.container}\n          >\n            {sliderProps.children}\n          </chakra.div>\n        </RangeSliderStylesProvider>\n      </RangeSliderProvider>\n    )\n  },\n)\n\nRangeSlider.displayName = \"RangeSlider\"\n\nexport interface RangeSliderThumbProps extends HTMLChakraProps<\"div\"> {\n  index: number\n}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const RangeSliderThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  function RangeSliderThumb(props, ref) {\n    const { getThumbProps, getInputProps, name } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const thumbProps = getThumbProps(props, ref)\n\n    return (\n      <chakra.div\n        {...thumbProps}\n        className={cx(\"chakra-slider__thumb\", props.className)}\n        __css={styles.thumb}\n      >\n        {thumbProps.children}\n        {name && <input {...getInputProps({ index: props.index })} />}\n      </chakra.div>\n    )\n  },\n)\n\nRangeSliderThumb.displayName = \"RangeSliderThumb\"\n\nexport interface RangeSliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderTrack = forwardRef<RangeSliderTrackProps, \"div\">(\n  function RangeSliderTrack(props, ref) {\n    const { getTrackProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const trackProps = getTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className={cx(\"chakra-slider__track\", props.className)}\n        __css={styles.track}\n        data-testid=\"chakra-range-slider-track\"\n      />\n    )\n  },\n)\n\nRangeSliderTrack.displayName = \"RangeSliderTrack\"\n\nexport interface RangeSliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderFilledTrack = forwardRef<\n  RangeSliderInnerTrackProps,\n  \"div\"\n>(function RangeSliderFilledTrack(props, ref) {\n  const { getInnerTrackProps } = useRangeSliderContext()\n  const styles = useRangeSliderStyles()\n  const trackProps = getInnerTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className=\"chakra-slider__filled-track\"\n      __css={styles.filledTrack}\n    />\n  )\n})\n\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\"\n\nexport interface RangeSliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const RangeSliderMark = forwardRef<RangeSliderMarkProps, \"div\">(\n  function RangeSliderMark(props, ref) {\n    const { getMarkerProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const markProps = getMarkerProps(props, ref)\n    return (\n      <chakra.div\n        {...markProps}\n        className={cx(\"chakra-slider__marker\", props.className)}\n        __css={styles.mark}\n      />\n    )\n  },\n)\n\nRangeSliderMark.displayName = \"RangeSliderMark\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}