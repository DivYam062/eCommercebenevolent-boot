{"ast":null,"code":"'use client';\n\nimport { useTheme } from \"./chunk-UIGT7YZF.mjs\";\n\n// src/hooks.ts\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return {\n    ...colorModeResult,\n    theme\n  };\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null) return value;\n  const getValue = val => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__breakpoints) == null ? void 0 : _a2.asArray) == null ? void 0 : _b2[val];\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null) return value;\n  const getValue = val => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__cssMap) == null ? void 0 : _a2[val]) == null ? void 0 : _b2.value;\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return theme => {\n    const fallbackArr = _fallback.filter(Boolean);\n    const result = _token.map((token2, index) => {\n      var _a, _b;\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, (_a = fallbackArr[index]) != null ? _a : token2);\n      }\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, (_b = fallbackArr[index]) != null ? _b : token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\nexport { useChakra, useToken, getToken };","map":{"version":3,"names":["useColorMode","useChakra","colorModeResult","theme","useTheme","getBreakpointValue","value","fallback","_a","_b","getValue","val","_a2","_b2","__breakpoints","asArray","getTokenValue","__cssMap","useToken","scale","token","getToken","_token","Array","isArray","_fallback","fallbackArr","filter","Boolean","result","map","token2","index","path"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\system\\src\\hooks.ts"],"sourcesContent":["import { useColorMode } from \"@chakra-ui/color-mode\"\nimport { Dict, StringOrNumber } from \"@chakra-ui/utils\"\nimport { useTheme } from \"./use-theme\"\n\nexport function useChakra<T extends Dict = Dict>() {\n  const colorModeResult = useColorMode()\n  const theme = useTheme() as T\n  return { ...colorModeResult, theme }\n}\n\nfunction getBreakpointValue<T extends StringOrNumber>(\n  theme: Dict,\n  value: T,\n  fallback: any,\n) {\n  if (value == null) return value\n  const getValue = (val: T) => theme.__breakpoints?.asArray?.[val]\n  return getValue(value) ?? getValue(fallback) ?? fallback\n}\n\nfunction getTokenValue<T extends StringOrNumber>(\n  theme: Dict,\n  value: T,\n  fallback: any,\n) {\n  if (value == null) return value\n  const getValue = (val: T) => theme.__cssMap?.[val]?.value\n  return getValue(value) ?? getValue(fallback) ?? fallback\n}\n\n/**\n * `useToken` is a custom hook used to resolve design tokens from the theme.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-token\n */\nexport function useToken<T extends StringOrNumber | StringOrNumber[]>(\n  scale: string,\n  token: T,\n  fallback?: T,\n) {\n  const theme = useTheme()\n  return getToken(scale, token, fallback)(theme)\n}\n\nexport function getToken<T extends StringOrNumber | StringOrNumber[]>(\n  scale: string,\n  token: T,\n  fallback?: T,\n): (theme: Dict) => T {\n  const _token = Array.isArray(token) ? token : [token]\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback]\n  return (theme: Dict<any>) => {\n    const fallbackArr = _fallback.filter(Boolean) as T[]\n    const result = _token.map((token, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token, fallbackArr[index] ?? token)\n      }\n      const path = `${scale}.${token}`\n      return getTokenValue(theme, path, fallbackArr[index] ?? token)\n    })\n    return Array.isArray(token) ? result : result[0]\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,YAAA,QAAoB;AAItB,SAASC,UAAA,EAAmC;EACjD,MAAMC,eAAA,GAAkBF,YAAA,CAAa;EACrC,MAAMG,KAAA,GAAQC,QAAA,CAAS;EACvB,OAAO;IAAE,GAAGF,eAAA;IAAiBC;EAAM;AACrC;AAEA,SAASE,mBACPF,KAAA,EACAG,KAAA,EACAC,QAAA,EACA;EAdF,IAAAC,EAAA,EAAAC,EAAA;EAeE,IAAIH,KAAA,IAAS,MAAM,OAAOA,KAAA;EAC1B,MAAMI,QAAA,GAAYC,GAAA,IAAQ;IAhB5B,IAAAC,GAAA,EAAAC,GAAA;IAgB+B,QAAAA,GAAA,IAAAD,GAAA,GAAAT,KAAA,CAAMW,aAAA,KAAN,gBAAAF,GAAA,CAAqBG,OAAA,KAArB,gBAAAF,GAAA,CAA+BF,GAAA;EAAA;EAC5D,QAAOF,EAAA,IAAAD,EAAA,GAAAE,QAAA,CAASJ,KAAK,MAAd,OAAAE,EAAA,GAAmBE,QAAA,CAASH,QAAQ,MAApC,OAAAE,EAAA,GAAyCF,QAAA;AAClD;AAEA,SAASS,cACPb,KAAA,EACAG,KAAA,EACAC,QAAA,EACA;EAxBF,IAAAC,EAAA,EAAAC,EAAA;EAyBE,IAAIH,KAAA,IAAS,MAAM,OAAOA,KAAA;EAC1B,MAAMI,QAAA,GAAYC,GAAA,IAAQ;IA1B5B,IAAAC,GAAA,EAAAC,GAAA;IA0B+B,QAAAA,GAAA,IAAAD,GAAA,GAAAT,KAAA,CAAMc,QAAA,KAAN,gBAAAL,GAAA,CAAiBD,GAAA,MAAjB,gBAAAE,GAAA,CAAuBP,KAAA;EAAA;EACpD,QAAOG,EAAA,IAAAD,EAAA,GAAAE,QAAA,CAASJ,KAAK,MAAd,OAAAE,EAAA,GAAmBE,QAAA,CAASH,QAAQ,MAApC,OAAAE,EAAA,GAAyCF,QAAA;AAClD;AAOO,SAASW,SACdC,KAAA,EACAC,KAAA,EACAb,QAAA,EACA;EACA,MAAMJ,KAAA,GAAQC,QAAA,CAAS;EACvB,OAAOiB,QAAA,CAASF,KAAA,EAAOC,KAAA,EAAOb,QAAQ,EAAEJ,KAAK;AAC/C;AAEO,SAASkB,SACdF,KAAA,EACAC,KAAA,EACAb,QAAA,EACoB;EACpB,MAAMe,MAAA,GAASC,KAAA,CAAMC,OAAA,CAAQJ,KAAK,IAAIA,KAAA,GAAQ,CAACA,KAAK;EACpD,MAAMK,SAAA,GAAYF,KAAA,CAAMC,OAAA,CAAQjB,QAAQ,IAAIA,QAAA,GAAW,CAACA,QAAQ;EAChE,OAAQJ,KAAA,IAAqB;IAC3B,MAAMuB,WAAA,GAAcD,SAAA,CAAUE,MAAA,CAAOC,OAAO;IAC5C,MAAMC,MAAA,GAASP,MAAA,CAAOQ,GAAA,CAAI,CAACC,MAAA,EAAOC,KAAA,KAAU;MArDhD,IAAAxB,EAAA,EAAAC,EAAA;MAsDM,IAAIU,KAAA,KAAU,eAAe;QAC3B,OAAOd,kBAAA,CAAmBF,KAAA,EAAO4B,MAAA,GAAOvB,EAAA,GAAAkB,WAAA,CAAYM,KAAK,MAAjB,OAAAxB,EAAA,GAAsBuB,MAAK;MACrE;MACA,MAAME,IAAA,GAAO,GAAGd,KAAK,IAAIY,MAAK;MAC9B,OAAOf,aAAA,CAAcb,KAAA,EAAO8B,IAAA,GAAMxB,EAAA,GAAAiB,WAAA,CAAYM,KAAK,MAAjB,OAAAvB,EAAA,GAAsBsB,MAAK;IAC/D,CAAC;IACD,OAAOR,KAAA,CAAMC,OAAA,CAAQJ,KAAK,IAAIS,MAAA,GAASA,MAAA,CAAO,CAAC;EACjD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}