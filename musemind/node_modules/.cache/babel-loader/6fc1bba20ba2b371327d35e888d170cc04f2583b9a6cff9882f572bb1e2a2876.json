{"ast":null,"code":"'use client';\n\n// src/flex.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\nexport { Flex };","map":{"version":3,"names":["chakra","forwardRef","jsx","Flex","Flex2","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\layout\\src\\flex.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"],"mappings":";;;AAAA,SACEA,MAAA,EACAC,UAAA,QAGK;AAwEE,SAAAC,GAAA;AAfF,IAAMC,IAAA,GAAOF,UAAA,CAA6B,SAASG,MAAKC,KAAA,EAAOC,GAAA,EAAK;EACzE,MAAM;IAAEC,SAAA;IAAWC,KAAA;IAAOC,OAAA;IAASC,IAAA;IAAMC,KAAA;IAAOC,IAAA;IAAMC,MAAA;IAAQ,GAAGC;EAAK,IACpET,KAAA;EAEF,MAAMU,MAAA,GAAS;IACbC,OAAA,EAAS;IACTC,aAAA,EAAeV,SAAA;IACfW,UAAA,EAAYV,KAAA;IACZW,cAAA,EAAgBV,OAAA;IAChBW,QAAA,EAAUV,IAAA;IACVW,SAAA,EAAWV,KAAA;IACXW,QAAA,EAAUV,IAAA;IACVW,UAAA,EAAYV;EACd;EAEA,OAAO,eAAAX,GAAA,CAACF,MAAA,CAAOwB,GAAA,EAAP;IAAWlB,GAAA;IAAUmB,KAAA,EAAOV,MAAA;IAAS,GAAGD;EAAA,CAAM;AACxD,CAAC;AAEDX,IAAA,CAAKuB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}