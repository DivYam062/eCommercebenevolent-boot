{"ast":null,"code":"'use client';\n\nimport { useChakra } from \"./chunk-7FWEOSAE.mjs\";\n\n// src/use-style-config.ts\nimport { resolveStyleConfig } from \"@chakra-ui/styled-system\";\nimport { mergeThemeOverride } from \"@chakra-ui/theme-utils\";\nimport { filterUndefined, memoizedGet as get, mergeWith, omit } from \"@chakra-ui/utils\";\nimport { useRef } from \"react\";\nimport isEqual from \"react-fast-compare\";\nfunction useStyleConfigImpl(themeKey, props = {}) {\n  var _a;\n  const {\n    styleConfig: styleConfigProp,\n    ...rest\n  } = props;\n  const {\n    theme,\n    colorMode\n  } = useChakra();\n  const themeStyleConfig = themeKey ? get(theme, `components.${themeKey}`) : void 0;\n  const styleConfig = styleConfigProp || themeStyleConfig;\n  const mergedProps = mergeWith({\n    theme,\n    colorMode\n  }, (_a = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _a : {}, filterUndefined(omit(rest, [\"children\"])));\n  const stylesRef = useRef({});\n  if (styleConfig) {\n    const getStyles = resolveStyleConfig(styleConfig);\n    const styles = getStyles(mergedProps);\n    const isStyleEqual = isEqual(stylesRef.current, styles);\n    if (!isStyleEqual) {\n      stylesRef.current = styles;\n    }\n  }\n  return stylesRef.current;\n}\nfunction useStyleConfig(themeKey, props = {}) {\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useMultiStyleConfig(themeKey, props = {}) {\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useComponentStyles__unstable(themeKey, props) {\n  var _a;\n  const {\n    baseConfig,\n    ...restProps\n  } = props;\n  const {\n    theme\n  } = useChakra();\n  const overrides = (_a = theme.components) == null ? void 0 : _a[themeKey];\n  const styleConfig = overrides ? mergeThemeOverride(overrides, baseConfig) : baseConfig;\n  return useStyleConfigImpl(null, {\n    ...restProps,\n    styleConfig\n  });\n}\nexport { useStyleConfig, useMultiStyleConfig, useComponentStyles__unstable };","map":{"version":3,"names":["resolveStyleConfig","mergeThemeOverride","filterUndefined","memoizedGet","get","mergeWith","omit","useRef","isEqual","useStyleConfigImpl","themeKey","props","_a","styleConfig","styleConfigProp","rest","theme","colorMode","useChakra","themeStyleConfig","mergedProps","defaultProps","stylesRef","getStyles","styles","isStyleEqual","current","useStyleConfig","useMultiStyleConfig","useComponentStyles__unstable","baseConfig","restProps","overrides","components"],"sources":["C:\\Users\\ASUS\\OneDrive\\Documents\\Unit6_Cw\\eCommercebenevolent-boot\\musemind\\node_modules\\@chakra-ui\\system\\src\\use-style-config.ts"],"sourcesContent":["import {\n  resolveStyleConfig,\n  SystemStyleObject,\n  ThemingProps,\n} from \"@chakra-ui/styled-system\"\nimport { mergeThemeOverride } from \"@chakra-ui/theme-utils\"\nimport {\n  Dict,\n  filterUndefined,\n  memoizedGet as get,\n  mergeWith,\n  omit,\n} from \"@chakra-ui/utils\"\nimport { useRef } from \"react\"\nimport isEqual from \"react-fast-compare\"\nimport { useChakra } from \"./hooks\"\n\ntype StylesRef = SystemStyleObject | Record<string, SystemStyleObject>\n\nfunction useStyleConfigImpl(\n  themeKey: string | null,\n  props: ThemingProps & Dict = {},\n) {\n  const { styleConfig: styleConfigProp, ...rest } = props\n\n  const { theme, colorMode } = useChakra()\n\n  const themeStyleConfig = themeKey\n    ? get(theme, `components.${themeKey}`)\n    : undefined\n\n  const styleConfig = styleConfigProp || themeStyleConfig\n\n  const mergedProps = mergeWith(\n    { theme, colorMode },\n    styleConfig?.defaultProps ?? {},\n    filterUndefined(omit(rest, [\"children\"])),\n  )\n\n  /**\n   * Store the computed styles in a `ref` to avoid unneeded re-computation\n   */\n  const stylesRef = useRef<StylesRef>({})\n\n  if (styleConfig) {\n    const getStyles = resolveStyleConfig(styleConfig)\n    const styles = getStyles(mergedProps)\n\n    const isStyleEqual = isEqual(stylesRef.current, styles)\n\n    if (!isStyleEqual) {\n      stylesRef.current = styles\n    }\n  }\n\n  return stylesRef.current\n}\n\nexport function useStyleConfig(\n  themeKey: string,\n  props: ThemingProps & Dict = {},\n) {\n  return useStyleConfigImpl(themeKey, props) as SystemStyleObject\n}\n\nexport function useMultiStyleConfig(\n  themeKey: string,\n  props: ThemingProps & Dict = {},\n) {\n  return useStyleConfigImpl(themeKey, props) as Record<\n    string,\n    SystemStyleObject\n  >\n}\n\ntype MultipartStyles = Record<string, SystemStyleObject>\n\nexport function useComponentStyles__unstable(\n  themeKey: string,\n  props: ThemingProps & { baseConfig: any },\n) {\n  const { baseConfig, ...restProps } = props\n  const { theme } = useChakra()\n\n  const overrides = theme.components?.[themeKey]\n\n  const styleConfig = overrides\n    ? mergeThemeOverride(overrides, baseConfig)\n    : baseConfig\n\n  return useStyleConfigImpl(null, {\n    ...restProps,\n    styleConfig,\n  }) as MultipartStyles\n}\n"],"mappings":";;;;;AAAA,SACEA,kBAAA,QAGK;AACP,SAASC,kBAAA,QAA0B;AACnC,SAEEC,eAAA,EACAC,WAAA,IAAeC,GAAA,EACfC,SAAA,EACAC,IAAA,QACK;AACP,SAASC,MAAA,QAAc;AACvB,OAAOC,OAAA,MAAa;AAKpB,SAASC,mBACPC,QAAA,EACAC,KAAA,GAA6B,CAAC,GAC9B;EAtBF,IAAAC,EAAA;EAuBE,MAAM;IAAEC,WAAA,EAAaC,eAAA;IAAiB,GAAGC;EAAK,IAAIJ,KAAA;EAElD,MAAM;IAAEK,KAAA;IAAOC;EAAU,IAAIC,SAAA,CAAU;EAEvC,MAAMC,gBAAA,GAAmBT,QAAA,GACrBN,GAAA,CAAIY,KAAA,EAAO,cAAcN,QAAQ,EAAE,IACnC;EAEJ,MAAMG,WAAA,GAAcC,eAAA,IAAmBK,gBAAA;EAEvC,MAAMC,WAAA,GAAcf,SAAA,CAClB;IAAEW,KAAA;IAAOC;EAAU,IACnBL,EAAA,GAAAC,WAAA,oBAAAA,WAAA,CAAaQ,YAAA,KAAb,OAAAT,EAAA,GAA6B,CAAC,GAC9BV,eAAA,CAAgBI,IAAA,CAAKS,IAAA,EAAM,CAAC,UAAU,CAAC,CAAC,CAC1C;EAKA,MAAMO,SAAA,GAAYf,MAAA,CAAkB,CAAC,CAAC;EAEtC,IAAIM,WAAA,EAAa;IACf,MAAMU,SAAA,GAAYvB,kBAAA,CAAmBa,WAAW;IAChD,MAAMW,MAAA,GAASD,SAAA,CAAUH,WAAW;IAEpC,MAAMK,YAAA,GAAejB,OAAA,CAAQc,SAAA,CAAUI,OAAA,EAASF,MAAM;IAEtD,IAAI,CAACC,YAAA,EAAc;MACjBH,SAAA,CAAUI,OAAA,GAAUF,MAAA;IACtB;EACF;EAEA,OAAOF,SAAA,CAAUI,OAAA;AACnB;AAEO,SAASC,eACdjB,QAAA,EACAC,KAAA,GAA6B,CAAC,GAC9B;EACA,OAAOF,kBAAA,CAAmBC,QAAA,EAAUC,KAAK;AAC3C;AAEO,SAASiB,oBACdlB,QAAA,EACAC,KAAA,GAA6B,CAAC,GAC9B;EACA,OAAOF,kBAAA,CAAmBC,QAAA,EAAUC,KAAK;AAI3C;AAIO,SAASkB,6BACdnB,QAAA,EACAC,KAAA,EACA;EAhFF,IAAAC,EAAA;EAiFE,MAAM;IAAEkB,UAAA;IAAY,GAAGC;EAAU,IAAIpB,KAAA;EACrC,MAAM;IAAEK;EAAM,IAAIE,SAAA,CAAU;EAE5B,MAAMc,SAAA,IAAYpB,EAAA,GAAAI,KAAA,CAAMiB,UAAA,KAAN,gBAAArB,EAAA,CAAmBF,QAAA;EAErC,MAAMG,WAAA,GAAcmB,SAAA,GAChB/B,kBAAA,CAAmB+B,SAAA,EAAWF,UAAU,IACxCA,UAAA;EAEJ,OAAOrB,kBAAA,CAAmB,MAAM;IAC9B,GAAGsB,SAAA;IACHlB;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}